import FXBaseClass from './fx-base-class';
import _ from 'lodash';
import * as Tone from 'tone';

export default class Autowah extends FXBaseClass {
    static fxName = 'autowah';
    static icon = '<svg width="20" height="17" viewBox="0 0 20 17" fill="none" xmlns="http://www.w3.org/2000/svg">< g clip - path="url(#clip0)" ><path fill-rule="evenodd" clip-rule="evenodd" d="M10.5171 14.3911C12.2229 15.9656 14.4954 17 17.5001 17H19.0001C19.5524 17 20.0001 16.5523 20.0001 16C20.0001 15.4477 19.5524 15 19.0001 15H17.5001C15.0047 15 13.2148 14.1594 11.8737 12.9214C10.5078 11.6607 9.56186 9.94358 8.87127 8.14206C8.23409 6.47984 7.8383 4.81403 7.5136 3.44746C7.48647 3.33329 7.45984 3.22121 7.43361 3.1114C7.26911 2.42283 7.10929 1.77516 6.93331 1.29831C6.84705 1.06458 6.73106 0.797703 6.56456 0.573037C6.40585 0.358882 6.0598 0 5.50004 0C5.09743 0 4.70855 0.125547 4.38765 0.404706C4.09253 0.661438 3.92532 0.987442 3.82077 1.26808C3.62811 1.78521 3.53816 2.47539 3.4524 3.13348L3.44011 3.22781C3.25382 4.65654 3.01207 6.5107 2.08623 8.59386L0.103967 13.0539L0.103471 13.055L0.102504 13.0572L0.102033 13.0583L0.0947413 13.0747L0.0941386 13.076L0.0925059 13.0797L0.0920176 13.0808L0.0907016 13.0838L0.0901275 13.0851L0.089128 13.0873L0.0886989 13.0883L0.0877681 13.0904L0.0873237 13.0914L0.0864825 13.0933C-0.137822 13.598 0.08921 14.1895 0.593892 14.4138C1.09858 14.6381 1.68954 14.4108 1.91385 13.9061L1.91473 13.9042L1.91521 13.9031L1.9162 13.9009L1.91661 13.8999L1.91813 13.8965L1.92237 13.887L1.923 13.8855L1.92662 13.8774L1.92703 13.8765L1.92745 13.8755L1.92787 13.8746L3.91385 9.40614C4.95843 7.05584 5.23116 4.96186 5.41852 3.52332C5.42209 3.49592 5.42563 3.46876 5.42914 3.44184C5.43234 3.41728 5.43551 3.39306 5.43865 3.36916C5.45486 3.43626 5.47141 3.50524 5.48834 3.5761C5.51493 3.68741 5.5422 3.8023 5.57025 3.92049C5.89201 5.27622 6.31661 7.06529 7.00379 8.85794C7.75071 10.8064 8.83604 12.8393 10.5171 14.3911Z" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M14.6092 12.8505C15.2832 13.2777 16.0827 13.5 17 13.5H19C19.5523 13.5 20 13.0523 20 12.5C20 11.9477 19.5523 11.5 19 11.5H17C16.4174 11.5 15.9981 11.3629 15.6799 11.1612C15.3564 10.9562 15.0797 10.6473 14.8447 10.2207C14.3578 9.3365 14.1193 8.07762 13.9963 6.66337C13.936 5.97027 13.9055 5.27253 13.8781 4.59813C13.8761 4.5479 13.8741 4.49771 13.872 4.44759C13.8474 3.83575 13.8232 3.23497 13.7775 2.71025C13.7298 2.16181 13.6518 1.59067 13.4762 1.13477C13.3058 0.692345 12.8842 0 12 0C11.6225 0 11.2402 0.072623 10.89 0.275517C10.5369 0.480177 10.2978 0.77027 10.1321 1.07001C9.84759 1.58446 9.71251 2.27297 9.59159 2.88936C9.58754 2.90999 9.58351 2.93055 9.57949 2.95101C9.57488 2.97447 9.57024 2.99808 9.56558 3.02183C9.29954 4.37694 8.93815 6.21778 7.63182 8.50386C6.73001 10.082 4.98122 11.7346 3.37172 13.0346C2.58112 13.6731 1.8502 14.2061 1.31722 14.5792C1.05106 14.7655 0.835113 14.9114 0.686811 15.0099C0.612682 15.0592 0.555519 15.0966 0.517505 15.1213L0.475141 15.1487L0.465259 15.155L0.463234 15.1563C-0.00256777 15.4529 -0.14007 16.071 0.156398 16.5369C0.452907 17.0028 1.07099 17.1402 1.53693 16.8437L1.00006 16C1.53693 16.8437 1.53693 16.8437 1.53693 16.8437L1.53889 16.8424L1.54285 16.8399L1.55666 16.831L1.60713 16.7984C1.65066 16.7701 1.71361 16.7289 1.79378 16.6756C1.95407 16.5691 2.18343 16.4142 2.46415 16.2177C3.02491 15.8251 3.79399 15.2644 4.6284 14.5904C6.26889 13.2654 8.27011 11.418 9.3683 9.49614C10.8379 6.92428 11.2504 4.8221 11.5255 3.42041C11.531 3.39221 11.5365 3.3643 11.5419 3.33667C11.6202 2.93829 11.681 2.65155 11.7369 2.44105C11.7543 2.56939 11.7705 2.71637 11.785 2.8835C11.8264 3.3596 11.8489 3.91457 11.8742 4.54231C11.8761 4.58757 11.8779 4.63321 11.8798 4.67922C11.9071 5.35247 11.9391 6.09223 12.0038 6.83663C12.1308 8.29738 12.3923 9.9135 13.0928 11.1855C13.4517 11.8371 13.9406 12.4267 14.6092 12.8505Z" fill="currentColor"/></g ><defs><clipPath id="clip0"><rect width="20" height="17" fill="currentColor" /></clipPath></defs></svg >'

    constructor (fxParameters) {
        super(fxParameters)
        this._q = 4
        this._mix = 1
        this._mixBeforeBypass = this._mix
        this.label = 'Autowah'
        this.isOn = fxParameters.isOn
    }

    setQ (value, time) {
        this._q = value
        if (this.isOn) {
            this.fx.Q = value
        }
    }
    setMix (value, time) {
        this._mix = value
        if (this.isOn) {
            if (!_.isNil(time)) {
                this.fx.wet.setValueAtTime(value, time)
            } else {
                this.fx.wet.value = value
            }
        }
    }
    setBypass (value, time) {
        if (value === true && !this._override) {
            // set mix to 0 rather than turn off so that we can do this rapidly without needing to rebuild the audio chain
            if (this._mix > 0) {
                this._mixBeforeBypass = this._mix
            }
            this.setMix(0, time)
        } else {
            this.setMix(this._mixBeforeBypass, time)
        }
    }


    enable () {
        this.fx = new Tone.AutoWah(50, 6, -30)
        this.fx.wet.value = this._mix
        this.setBypass(true)
    }

    getAutomationOptions () {
        return [
            {
                label: 'Enabled',
                name: 'enabled',
                setParameter: this.setBypass.bind(this),
                calculateValue: function (value) {
                    return value === false ? true : false
                }
            }
        ]
    }
}
