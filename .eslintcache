[{"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/index.js":"1","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/App.js":"2","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/reportWebVitals.js":"3","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/store.js":"4","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/firebase/index.js":"5","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/actions.js":"6","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/firebase/context.js":"7","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/firebase/firebase.js":"8","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/PlayRoute.js":"9","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/landing-page/LandingPageRoute.js":"10","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/rounds-list-route/RoundsListRoute.js":"11","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/Header.js":"12","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/SignInDialog.js":"13","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/RenameDialog.js":"14","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/DeleteRoundDialog.js":"15","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/index.js":"16","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/actionTypes.js":"17","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/PlayButton.js":"18","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/HeaderAvatar.js":"19","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/JitsiComponent.js":"20","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/ProjectName.js":"21","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/HeaderMenu.js":"22","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/PlayUI.js":"23","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/EffectsSidebar.js":"24","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/PatternsSidebar.js":"25","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/ShareDialog.js":"26","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/AudioEngine.js":"27","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/utils/defaultData.js":"28","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/utils/index.js":"29","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerSettings.js":"30","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/round.js":"31","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/rounds.js":"32","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/utils/constants.js":"33","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/Track.js":"34","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerAutomation.js":"35","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerType.js":"36","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerNumberOfSteps.js":"37","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerInstrument.js":"38","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerName.js":"39","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/VolumeSlider.js":"40","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/PatternThumbControl.js":"41","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/EffectThumbControl.js":"42","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/FX.js":"43","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/Instruments.js":"44","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/Automation.js":"45","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/reverb.js":"46","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/autowah.js":"47","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/bitcrusher.js":"48","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/distortion.js":"49","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/highpass.js":"50","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/lowpass.js":"51","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/delay.js":"52","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/TomToms.js":"53","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Rimshot.js":"54","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Maracas.js":"55","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Cymbal.js":"56","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Cowbell.js":"57","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Congas.js":"58","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Claves.js":"59","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Clap.js":"60","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/SnareDrum.js":"61","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/HitHatOpen.js":"62","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/HiHatClosed.js":"63","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/BassDrum.js":"64","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/InstrumentBaseClass.js":"65","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/fx-base-class.js":"66","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Bass Drum [BD]/index.js":"67","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Tom Toms [LT-MT-HT]/index.js":"68","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Cymbal [CY]/index.js":"69","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Hi Hat Closed [CH]/index.js":"70","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Snare Drum [SD]/index.js":"71","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Hi Hat Open [OH]/index.js":"72","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Claves [CL]/index.js":"73","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Clap [CP]/index.js":"74","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Congas [HC-MC-LC]/index.js":"75","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Cowbell [CB]/index.js":"76","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Maracas [MA]/index.js":"77","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Rimshot [RS]/index.js":"78","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/SwingSlider.js":"79","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/TempoSlider.js":"80","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/display.js":"81","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/users.js":"82","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/user.js":"83","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/OrientationDialog.js":"84","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerTimeOffset.js":"85","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerPercentOffset.js":"86"},{"size":775,"mtime":1612799686140,"results":"87","hashOfConfig":"88"},{"size":2348,"mtime":1612799686050,"results":"89","hashOfConfig":"88"},{"size":362,"mtime":1612799686155,"results":"90","hashOfConfig":"88"},{"size":117,"mtime":1612170980071,"results":"91","hashOfConfig":"88"},{"size":115,"mtime":1612169138907,"results":"92","hashOfConfig":"88"},{"size":3996,"mtime":1613564307822,"results":"93","hashOfConfig":"88"},{"size":113,"mtime":1612169138902,"results":"94","hashOfConfig":"88"},{"size":13051,"mtime":1612799686137,"results":"95","hashOfConfig":"88"},{"size":15397,"mtime":1613558498517,"results":"96","hashOfConfig":"88"},{"size":3065,"mtime":1613470956346,"results":"97","hashOfConfig":"88"},{"size":8471,"mtime":1612799686136,"results":"98","hashOfConfig":"88"},{"size":6556,"mtime":1613400076338,"results":"99","hashOfConfig":"88"},{"size":12425,"mtime":1613490055128,"results":"100","hashOfConfig":"88"},{"size":2913,"mtime":1612799686102,"results":"101","hashOfConfig":"88"},{"size":2769,"mtime":1612799686100,"results":"102","hashOfConfig":"88"},{"size":285,"mtime":1612799686147,"results":"103","hashOfConfig":"88"},{"size":2950,"mtime":1613564005576,"results":"104","hashOfConfig":"88"},{"size":1825,"mtime":1612799686110,"results":"105","hashOfConfig":"88"},{"size":7281,"mtime":1612799686108,"results":"106","hashOfConfig":"88"},{"size":5242,"mtime":1612799686120,"results":"107","hashOfConfig":"88"},{"size":4507,"mtime":1612799686111,"results":"108","hashOfConfig":"88"},{"size":4587,"mtime":1613510220290,"results":"109","hashOfConfig":"88"},{"size":51043,"mtime":1613558455607,"results":"110","hashOfConfig":"88"},{"size":7882,"mtime":1612799686344,"results":"111","hashOfConfig":"88"},{"size":7861,"mtime":1613571076876,"results":"112","hashOfConfig":"88"},{"size":5269,"mtime":1612799686103,"results":"113","hashOfConfig":"88"},{"size":4277,"mtime":1613564598948,"results":"114","hashOfConfig":"88"},{"size":3814,"mtime":1613507594518,"results":"115","hashOfConfig":"88"},{"size":2589,"mtime":1612799686163,"results":"116","hashOfConfig":"88"},{"size":5791,"mtime":1613557006564,"results":"117","hashOfConfig":"88"},{"size":13720,"mtime":1613564534961,"results":"118","hashOfConfig":"88"},{"size":448,"mtime":1612799686150,"results":"119","hashOfConfig":"88"},{"size":1038,"mtime":1612802787201,"results":"120","hashOfConfig":"88"},{"size":12092,"mtime":1613569292507,"results":"121","hashOfConfig":"88"},{"size":2538,"mtime":1612799686341,"results":"122","hashOfConfig":"88"},{"size":3233,"mtime":1612799686337,"results":"123","hashOfConfig":"88"},{"size":2549,"mtime":1612799686338,"results":"124","hashOfConfig":"88"},{"size":3948,"mtime":1612799686340,"results":"125","hashOfConfig":"88"},{"size":1552,"mtime":1612562252994,"results":"126","hashOfConfig":"88"},{"size":2669,"mtime":1612799686336,"results":"127","hashOfConfig":"88"},{"size":7615,"mtime":1613570375343,"results":"128","hashOfConfig":"88"},{"size":5491,"mtime":1612799686345,"results":"129","hashOfConfig":"88"},{"size":1328,"mtime":1612799686053,"results":"130","hashOfConfig":"88"},{"size":3354,"mtime":1612799686054,"results":"131","hashOfConfig":"88"},{"size":4230,"mtime":1612799686052,"results":"132","hashOfConfig":"88"},{"size":1702,"mtime":1612799686062,"results":"133","hashOfConfig":"88"},{"size":5484,"mtime":1612799686056,"results":"134","hashOfConfig":"88"},{"size":1708,"mtime":1612799686057,"results":"135","hashOfConfig":"88"},{"size":2472,"mtime":1612799686059,"results":"136","hashOfConfig":"88"},{"size":2462,"mtime":1612799686060,"results":"137","hashOfConfig":"88"},{"size":2907,"mtime":1612799686061,"results":"138","hashOfConfig":"88"},{"size":7110,"mtime":1612799686058,"results":"139","hashOfConfig":"88"},{"size":575,"mtime":1612799686098,"results":"140","hashOfConfig":"88"},{"size":561,"mtime":1612799686086,"results":"141","hashOfConfig":"88"},{"size":561,"mtime":1612799686077,"results":"142","hashOfConfig":"88"},{"size":551,"mtime":1612799686068,"results":"143","hashOfConfig":"88"},{"size":561,"mtime":1612799686067,"results":"144","hashOfConfig":"88"},{"size":563,"mtime":1612799686066,"results":"145","hashOfConfig":"88"},{"size":551,"mtime":1612799686065,"results":"146","hashOfConfig":"88"},{"size":531,"mtime":1612799686064,"results":"147","hashOfConfig":"88"},{"size":582,"mtime":1612799686091,"results":"148","hashOfConfig":"88"},{"size":592,"mtime":1612799686070,"results":"149","hashOfConfig":"88"},{"size":604,"mtime":1612799686069,"results":"150","hashOfConfig":"88"},{"size":573,"mtime":1612799686064,"results":"151","hashOfConfig":"88"},{"size":4747,"mtime":1613554915463,"results":"152","hashOfConfig":"88"},{"size":1242,"mtime":1612799686059,"results":"153","hashOfConfig":"88"},{"size":1144,"mtime":1612776922455,"results":"154","hashOfConfig":"88"},{"size":1026,"mtime":1612776922486,"results":"155","hashOfConfig":"88"},{"size":467,"mtime":1612776922459,"results":"156","hashOfConfig":"88"},{"size":355,"mtime":1612776922482,"results":"157","hashOfConfig":"88"},{"size":579,"mtime":1612776922485,"results":"158","hashOfConfig":"88"},{"size":383,"mtime":1612776922483,"results":"159","hashOfConfig":"88"},{"size":326,"mtime":1612776922457,"results":"160","hashOfConfig":"88"},{"size":439,"mtime":1612776922456,"results":"161","hashOfConfig":"88"},{"size":858,"mtime":1612776922458,"results":"162","hashOfConfig":"88"},{"size":439,"mtime":1612776922459,"results":"163","hashOfConfig":"88"},{"size":327,"mtime":1612776922483,"results":"164","hashOfConfig":"88"},{"size":327,"mtime":1612776922484,"results":"165","hashOfConfig":"88"},{"size":2008,"mtime":1612799686113,"results":"166","hashOfConfig":"88"},{"size":1980,"mtime":1612799686348,"results":"167","hashOfConfig":"88"},{"size":3081,"mtime":1613466968461,"results":"168","hashOfConfig":"88"},{"size":446,"mtime":1612799686154,"results":"169","hashOfConfig":"88"},{"size":1030,"mtime":1612799686152,"results":"170","hashOfConfig":"88"},{"size":1060,"mtime":1613467140990,"results":"171","hashOfConfig":"88"},{"size":2502,"mtime":1613552406750,"results":"172","hashOfConfig":"88"},{"size":2575,"mtime":1613552402253,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"12pcy8c",{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"176"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"176"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"176"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"176"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"176"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"176"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"176"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"176"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"176"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"176"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"176"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"176"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"176"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"176"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"176"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"176"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"176"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"176"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/index.js",[],["366","367"],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/App.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/reportWebVitals.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/store.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/firebase/index.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/actions.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/firebase/context.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/firebase/firebase.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/PlayRoute.js",["368"],"import React, { Component, createRef } from 'react'\nimport PlayUI from './PlayUI'\nimport PatternsSidebar from './PatternsSidebar'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Box from '@material-ui/core/Box';\nimport EffectsSidebar from './EffectsSidebar';\nimport _ from 'lodash';\nimport Loader from 'react-loader-spinner';\nimport { connect } from \"react-redux\";\nimport { FirebaseContext } from '../../firebase';\nimport { setRound, setUsers, setIsPlaying, setUserBusFxOverride, addUserBus, setRoundCurrentUsers, setRoundBpm, setRoundSwing } from '../../redux/actions'\nimport AudioEngine from '../../audio-engine/AudioEngine'\nimport Instruments from '../../audio-engine/Instruments'\nimport FX from '../../audio-engine/FX'\nimport ShareDialog from '../dialogs/ShareDialog'\nimport { getDefaultUserBus, getDefaultUserPatterns } from '../../utils/defaultData'\nimport LayerSettings from './layer-settings/LayerSettings';\nimport OrientationDialog from '../dialogs/OrientationDialog';\n\nconst styles = theme => ({\n    root: {\n        height: '100%',\n        position: 'relative',\n        overflow: 'hidden'\n    },\n    loader: {\n        position: 'absolute',\n        top: 0,\n        zIndex: 9,\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n})\n\nclass PlayRoute extends Component {\n    static contextType = FirebaseContext;\n    constructor (props) {\n        super(props)\n        this.isLoadingRound = false;\n        this.hasLoadedRound = false;\n        this.isDisposing = false;\n        this.reloadCollaborationLayers = this.reloadCollaborationLayers.bind(this)\n        this.startAudioContext = this.startAudioContext.bind(this)\n        this.reloadCollaborationLayersThrottled = _.debounce(this.reloadCollaborationLayers, 1000)\n        this.playUIRef = null;\n    }\n    componentDidMount () {\n        //console.log('PlayRoute::componentDidMount()', this.props.user, this.isLoadingRound, this.hasLoadedRound, this.props.round);\n        this.addStartAudioContextListener()\n        if (!this.isLoadingRound && !this.hasLoadedRound && !_.isNil(this.props.user)) {\n            this.loadRound()\n        }\n    }\n\n    componentDidUpdate () {\n        //  console.log('PlayRoute::componentDidUpdate()', this.props.user);\n        if (!this.isLoadingRound && !this.hasLoadedRound && _.isNil(this.props.round) && !_.isNil(this.props.user)) {\n            this.loadRound()\n        }\n    }\n\n    async componentWillUnmount () {\n        this.isDisposing = true;\n        this.removeFirebaseListeners()\n        AudioEngine.stop()\n        if (!_.isNil(this.props.round) && !_.isNil(this.props.round.currentUsers)) {\n            this.props.setIsPlaying(false)\n        }\n        /*let currentUsers = _.cloneDeep(this.props.round.currentUsers)\n        _.pull(currentUsers, this.props.user.id)\n        await this.context.updateRound(this.props.round.id, { currentUsers })*/\n        this.props.setRound(null)\n        this.props.setUsers([])\n        this.isLoadingRound = false;\n        this.hasLoadedRound = false;\n    }\n\n    async loadRound () {\n        this.isLoadingRound = true;\n        let roundId = this.props.location.pathname.split('/play/')[1]\n        // console.log('PlayRoute::loadRound()', roundId);\n        let round = await this.context.getRound(roundId)\n        if (_.isNil(round) || _.isNil(round.currentUsers)) {\n            // probably deleted round\n            this.props.history.push('/rounds')\n            return\n        }\n\n        const userId = this.props.user.id\n        if (!round.currentUsers.includes(userId)) {\n            // first time user to this round\n            // add ourselves to current users of this round\n            round.currentUsers.push(userId)\n            // check if we have a user bus and user patterns document (createdBy user will already, but collaborators wont)\n            if (_.isNil(round.userBuses[userId])) {\n                round.userBuses[userId] = getDefaultUserBus(userId)\n                await this.context.createUserBus(roundId, userId, round.userBuses[userId])\n            }\n            if (_.isNil(round.userPatterns[userId])) {\n                round.userPatterns[userId] = getDefaultUserPatterns(userId)\n                await this.context.saveUserPatterns(roundId, userId, round.userPatterns[userId])\n            }\n        }\n        await this.context.updateRound(round.id, { currentUsers: round.currentUsers })\n        // load other current users (to get colors, avatar etc)\n        let currentUsers = []\n        for (const currentUser of round.currentUsers) {\n            const user = await this.context.loadUser(currentUser)\n            currentUsers.push(user)\n        }\n\n        // load audio\n        await AudioEngine.init()\n        Instruments.init()\n        FX.init()\n        console.log('PlayRoute loading audio engine');\n        await AudioEngine.load(round)\n        console.log('PlayRoute finished loading audio engine');\n\n        this.props.setUsers(currentUsers)\n        this.props.setRound(round)\n        this.hasLoadedRound = true\n        this.isLoadingRound = false\n        this.removeFirebaseListeners()\n        this.addFirebaseListeners()\n        this.addUsersListeners()\n    }\n\n    addFirebaseListeners () {\n        const _this = this\n\n        // Round\n        this.context.db.collection('rounds').doc(this.props.round.id).onSnapshot(async (doc) => {\n            const updatedRound = doc.data()\n            // console.log('### round change listener fired', this.props.round, updatedRound);\n            if (_.isNull(this.props.round)) {\n                // probably deleted round\n                _this.props.history.push('/rounds')\n                return\n            }\n            if (!this.isDisposing) {\n                if (!_.isEqual(_this.props.round.currentUsers, updatedRound.currentUsers)) {\n                    //    console.log('new user added or removed');\n                    let users = []\n                    for (const userId of updatedRound.currentUsers) {\n                        let user = await _this.context.loadUser(userId)\n                        users.push(user)\n                    }\n                    //    console.log('setUsers()', users);\n                    _this.props.setUsers(users)\n                    _this.props.setRoundCurrentUsers(updatedRound.currentUsers)\n                    _this.addUsersListeners()\n                }\n                if (!_.isEqual(_this.props.round.isPlaying, updatedRound.isPlaying)) {\n                    if (updatedRound.isPlaying) {\n                        AudioEngine.play()\n                        _this.props.setIsPlaying(true)\n                    } else {\n                        AudioEngine.stop()\n                        _this.props.setIsPlaying(false)\n                    }\n                }\n                if (!_.isEqual(_this.props.round.bpm, updatedRound.bpm)) {\n                    AudioEngine.setTempo(updatedRound.bpm)\n                    _this.props.setRoundBpm(updatedRound.bpm)\n                }\n                if (!_.isEqual(_this.props.round.swing, updatedRound.swing)) {\n                    AudioEngine.setSwing(updatedRound.swing)\n                    _this.props.setRoundSwing(updatedRound.swing)\n                }\n            }\n        })\n\n        // Layers\n        this.layersChangeListenerUnsubscribe = this.context.db.collection('rounds').doc(this.props.round.id).collection('layers').onSnapshot((layerCollectionSnapshot) => {\n            //  console.log('### layer change listener fired');\n            layerCollectionSnapshot.docChanges().forEach(change => {\n                if (change.type === 'modified') {\n                    //  console.log('Modified layer: ', change.doc.data());\n                    const layer = change.doc.data()\n                    if (layer.createdBy !== _this.props.user.id) {\n                        _this.reloadCollaborationLayersThrottled()\n                    } else {\n                        // console.log('ignoring own firebase change');\n                    }\n                }\n                if (change.type === 'added') {\n                    //   console.log('New layer: ', change.doc.data());\n                    _this.reloadCollaborationLayersThrottled()\n                }\n                if (change.type === 'removed') {\n                    //    console.log('Removed layer: ', change.doc.data());\n                    _this.reloadCollaborationLayersThrottled()\n                }\n            });\n        })\n\n        // Userbus (FX)\n        this.userBusChangeListenerUnsubscribe = this.context.db.collection('rounds').doc(this.props.round.id).collection('userBuses').onSnapshot((userBusesCollectionSnapshot) => {\n            //  console.log('### userbus change listener fired');\n            userBusesCollectionSnapshot.docChanges().forEach(change => {\n                const userBus = change.doc.data()\n                userBus.id = change.doc.id\n                if (change.type === 'modified') {\n                    //  console.log('Modified userbus: ', change.doc.data(), _this.props.round.userBuses[userBus.id]);\n                    _this.handleUserBusChange(userBus)\n                }\n                if (change.type === 'added') {\n                    if (_.isNil(_this.props.round.userBuses[userBus.id])) {\n                        _this.props.addUserBus(userBus.id, userBus)\n                        AudioEngine.addUser(userBus.id, userBus.fx)\n                    }\n                }\n                if (change.type === 'removed') {\n                    //console.log('Removed userbus: ', change.doc.data());\n                }\n            });\n        })\n    }\n\n    removeFirebaseListeners () {\n        //console.log('removeFirebaseListeners()');\n        if (!_.isNil(this.layersChangeListenerUnsubscribe)) {\n            this.layersChangeListenerUnsubscribe();\n        }\n        if (!_.isNil(this.userBusChangeListenerUnsubscribe)) {\n            this.userBusChangeListenerUnsubscribe();\n        }\n        this.removeUsersListeners()\n    }\n\n    addUsersListeners () {\n        this.removeUsersListeners()\n        this.usersChangeListenersUnsubscribe = []\n        const _this = this;\n        for (const user of this.props.users) {\n            let userListenerUnsubscribe = this.context.db.collection('users').doc(user.id).onSnapshot((doc) => {\n                //    console.log('### user change listener fired');\n                _this.loadUsers()\n            })\n            this.usersChangeListenersUnsubscribe.push(userListenerUnsubscribe)\n        }\n    }\n\n    async loadUsers () {\n        let users = []\n        for (const userId of this.props.round.currentUsers) {\n            let user = await this.context.loadUser(userId)\n            users.push(user)\n        }\n        // console.log('setUsers()', users);\n        this.props.setUsers(users)\n        this.props.setRoundCurrentUsers(this.props.round.currentUsers)\n    }\n\n    removeUsersListeners () {\n        if (!_.isNil(this.usersChangeListenersUnsubscribe)) {\n            for (const unsubscribe of this.usersChangeListenersUnsubscribe) {\n                unsubscribe()\n            }\n        }\n    }\n\n    handleUserBusChange (userBus) {\n        let fxOrderChanged = false\n        for (let fx of userBus.fx) {\n            const currentFx = _.find(this.props.round.userBuses[userBus.id].fx, { id: fx.id })\n            if (!_.isEqual(fx.isOverride, currentFx.isOverride)) {\n                //  console.log('found fx override change', fx, currentFx);\n                AudioEngine.busesByUser[userBus.id].fx[fx.id].override = fx.isOverride\n                this.props.setUserBusFxOverride(userBus.id, fx.id, fx.isOverride)\n            }\n            if (!_.isEqual(fx.order, currentFx.order)) {\n                fxOrderChanged = true\n            }\n        }\n        if (fxOrderChanged) {\n            AudioEngine.busesByUser[userBus.id].setFxOrder(userBus.fx)\n        }\n    }\n\n    // if any of the subcollections for a collaboration user change, trigger a (throttled) reload of all collaboration layers as there could be multiple changes\n    // to do: maybe add an id to the query to make sure we don't overwrite the local round with an await result that comes in late\n    async reloadCollaborationLayers () {\n        //console.log('reloadCollaborationLayers()');\n        const _this = this;\n        if (!_.isNil(this.props.round)) {\n            const newRound = await this.context.getRound(this.props.round.id)\n            const newLayers = _.filter(newRound.layers, (layer) => {\n                return layer.createdBy !== _this.props.user.id\n            })\n            const oldLayers = _.filter(this.props.round.layers, (layer) => {\n                return layer.createdBy !== _this.props.user.id\n            })\n            // console.log('comparing layers', _.isEqual(newLayers, oldLayers));\n            if (!_.isEqual(newLayers, oldLayers)) {\n                const userLayers = _.filter(this.props.round.layers, (layer) => {\n                    return layer.createdBy === _this.props.user.id\n                })\n                const layers = [...userLayers, ...newLayers]\n                const round = _.cloneDeep(this.props.round)\n                round.layers = layers\n                this.props.setRound(round)\n            }\n        }\n    }\n\n    // user needs to click something in order to start audio context, if they're a collaborator then they may not click play so use the first click to start audio context\n    addStartAudioContextListener () {\n        window.addEventListener('touchstart', this.startAudioContext)\n    }\n    startAudioContext () {\n        //console.log('startAudioContext()');\n        AudioEngine.startAudioContext()\n        this.removeStartAudioContextListener()\n    }\n    removeStartAudioContextListener () {\n        window.removeEventListener('touchstart', this.startAudioContext)\n    }\n\n    adjustLayerTimingInstant (id, percent) {\n        this.playUIRef.adjustLayerTiming(id, percent)\n    }\n\n    render () {\n        //  console.log('PlayRoute::render()', this.props.round);\n        const { classes, round } = this.props;\n        return (\n            <Box className={classes.root}>\n                {\n                    !_.isNil(round) &&\n                    <PlayUI childRef={ref => (this.playUIRef = ref)} />\n                }\n                {\n                    _.isNil(round) &&\n                    <Loader\n                        className={classes.loader}\n                        type=\"Puff\"\n                        color=\"#00BFFF\"\n                        height={100}\n                        width={100}\n                        visible={true}\n                    />\n                }\n                <PatternsSidebar />\n                <EffectsSidebar />\n                <ShareDialog />\n                <LayerSettings playUIRef={this.playUIRef} />\n                <OrientationDialog />\n            </Box>\n        )\n    }\n}\nPlayRoute.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => {\n    return {\n        round: state.round,\n        user: state.user,\n        users: state.users\n    };\n};\n\n\nexport default connect(\n    mapStateToProps,\n    {\n        setRound,\n        setUsers,\n        setIsPlaying,\n        setUserBusFxOverride,\n        addUserBus,\n        setRoundCurrentUsers,\n        setRoundBpm,\n        setRoundSwing\n    }\n)(withStyles(styles)(PlayRoute));","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/landing-page/LandingPageRoute.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/rounds-list-route/RoundsListRoute.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/Header.js",["369"],"import React, { useEffect, useContext } from 'react'\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Box from '@material-ui/core/Box';\nimport {\n    Link\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport PlayButton from './PlayButton';\nimport { useLocation } from 'react-router-dom'\nimport { setUser, setIsShowingSignInDialog, setRedirectAfterSignIn, setRounds, setUserDisplayName, setSignUpDisplayName, setIsShowingShareDialog } from '../../redux/actions'\nimport _ from 'lodash'\nimport HeaderAvatar from './HeaderAvatar'\nimport JitsiComponent from '../play/JitsiComponent';\nimport ProjectName from './ProjectName'\nimport HeaderMenu from './HeaderMenu';\nimport { FirebaseContext } from '../../firebase';\n\n\nconst headerStyles = makeStyles((theme) => ({\n    root: {\n        height: '64px',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n        position: 'fixed',\n        zIndex: 4,\n        backgroundColor: 'rgba(47,47,47,0.9)',\n    },\n    rightSide: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    rightSideChild: {\n        marginRight: '1rem',\n    },\n    roundAroundLogoButton: {\n        fontWeight: 600\n    },\n    avatars: {\n        display: 'flex',\n        marginRight: '1rem',\n        alignItems: 'center'\n    },\n    avatar: {\n        position: 'relative',\n\n    }\n}))\n\nfunction Header ({ user, users, round, setUser, setIsShowingSignInDialog, redirectAfterSignIn, setRedirectAfterSignIn, rounds, setRounds, signupDisplayName, setIsShowingShareDialog }) {\n    const firebaseContext = useContext(FirebaseContext);\n    const classes = headerStyles();\n    const location = useLocation();\n    const isPlayMode = location.pathname.includes('/play/') ? true : false\n\n    const onSignInClick = () => {\n        setIsShowingSignInDialog(true)\n    }\n\n    const onShareClick = () => {\n        setIsShowingShareDialog(true)\n    }\n\n    useEffect(() => {\n        firebaseContext.onUserUpdatedObservers.push(async (authUser) => {\n            if (!_.isNil(authUser)) {\n                // see if this user exists in users collection, if not then we're probably in the middle of signing up so ignore\n                let user = await firebaseContext.loadUser(authUser.uid)\n                if (!_.isNil(user)) {\n                    setUser(user)\n                    //if (!user.emailVerified) {\n                    //   console.log('need to verify email');\n                    //  } else {\n                    const rounds = await firebaseContext.getRoundsList(user.id, 1.5)\n                    setRounds(rounds)\n                    if (!_.isNil(redirectAfterSignIn)) {\n                        location.push(redirectAfterSignIn)\n                        setRedirectAfterSignIn(null)\n                    }\n                    // }\n                } else {\n                    console.log('ignoring auth change, probably signing up');\n                }\n            } else {\n                console.log('signed out', location.pathname);\n                if (location.pathname !== '/') {\n                    setIsShowingSignInDialog(true)\n                }\n            }\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n    }, [])\n\n    return (\n\n        <Box className={classes.root} bgcolor={\"background.default\"}>\n            {isPlayMode &&\n                <>\n                    <div>\n                        <IconButton to=\"/rounds\" component={Link}>\n                            <ArrowBackIosIcon />\n                        </IconButton>\n                    </div>\n                    <div>\n                        {\n                            round &&\n                            <div><ProjectName name={round.name} /></div>\n                        }\n                        {\n                            _.isNil(round) &&\n                            <div>Loading...</div>\n\n                        }\n                    </div>\n                    <Box className={classes.rightSide} >\n                        <Box className={classes.avatars}>\n                            {\n                                users.map((currentUser) => (\n                                    <HeaderAvatar className={classes.avatar} key={currentUser.id} user={currentUser} users={users} shouldShowMenu={!_.isNil(user) && (currentUser.id === user.id)} />\n                                ))\n                            }\n                        </Box>\n                        <JitsiComponent />\n                        <div>\n                            <Button className={classes.rightSideChild} onClick={onShareClick} variant=\"contained\" color=\"secondary\" disableElevation startIcon={<ShareIcon />}>Share</Button>\n                        </div>\n                        <div>\n                            <PlayButton className={classes.rightSideChild} />\n                        </div>\n                        <div>\n                            <HeaderMenu />\n                        </div>\n                    </Box>\n                </>\n            }\n            {!isPlayMode &&\n                <>\n                    <div></div>\n                    <div><Button className={classes.roundAroundLogoButton} component={Link} to=\"/\">RoundAround</Button></div>\n                    {\n                        user &&\n                        <HeaderAvatar user={user} users={users} shouldShowMenu={true} />\n                    }\n                    {\n                        !user &&\n                        <Button variant=\"contained\" color=\"secondary\" disableElevation onClick={onSignInClick}>Sign in</Button>\n                    }\n\n                </>\n            }\n\n\n        </Box >\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        users: state.users,\n        redirectAfterSignIn: state.display.redirectAfterSignIn,\n        signupDisplayName: state.display.signupDisplayName,\n        rounds: state.rounds,\n        round: state.round\n    };\n};\nexport default connect(\n    mapStateToProps,\n    {\n        setUser,\n        setUserDisplayName,\n        setSignUpDisplayName,\n        setIsShowingSignInDialog,\n        setRedirectAfterSignIn,\n        setRounds,\n        setIsShowingShareDialog\n    }\n)(Header);","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/SignInDialog.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/RenameDialog.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/DeleteRoundDialog.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/index.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/actionTypes.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/PlayButton.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/HeaderAvatar.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/JitsiComponent.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/ProjectName.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/HeaderMenu.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/PlayUI.js",["370","371"],"import React, { Component } from 'react';\nimport * as _ from 'lodash';\nimport { SVG } from '@svgdotjs/svg.js'\nimport '@svgdotjs/svg.panzoom.js'\nimport { HTML_UI_Params, KEY_MAPPINGS } from '../../utils/constants'\nimport { connect } from \"react-redux\";\nimport AudioEngine from '../../audio-engine/AudioEngine'\nimport Instruments from '../../audio-engine/Instruments'\nimport FX from '../../audio-engine/FX'\nimport { getDefaultLayerData } from '../../utils/defaultData';\nimport { TOGGLE_STEP, ADD_LAYER, SET_SELECTED_LAYER_ID, SET_IS_SHOWING_LAYER_SETTINGS, SET_IS_PLAYING, UPDATE_STEP, SET_IS_SHOWING_ORIENTATION_DIALOG } from '../../redux/actionTypes'\nimport { FirebaseContext } from '../../firebase/'\nimport * as Tone from 'tone';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { numberRange } from '../../utils/index'\n\nconst styles = theme => ({\n    button: {\n        cursor: 'pointer'\n    },\n    buttonIcon: {\n        pointerEvents: 'none'\n    }\n})\n\nclass PlayUI extends Component {\n    static contextType = FirebaseContext\n    constructor (props) {\n        super(props)\n        this.isZooming = false\n        this.isPanning = false\n        this.stepGraphics = []\n        this.layerGraphics = []\n        this.round = null; // local copy of round, prevent mutating store.\n        this.isOn = false\n        this.editAllLayers = false\n        this.userColors = {};\n        this.onWindowResizeThrottled = _.throttle(this.onWindowResize.bind(this), 1000)\n        this.selectedLayerId = null;\n        this.onKeypress = this.onKeypress.bind(this)\n        this.onOutsideClick = this.onOutsideClick.bind(this)\n    }\n\n    async componentDidMount () {\n        // register this component with parent so we can do some instant updates bypassing redux for speed\n        this.props.childRef(this)\n\n        this.createRound()\n        window.addEventListener('resize', this.onWindowResizeThrottled)\n        window.addEventListener('keypress', this.onKeypress)\n        this.addBackgroundEventListeners()\n        if (this.getOrientation() === 'portrait') {\n            this.showOrientationDialog()\n        } else {\n            this.hideOrientationDialog()\n        }\n    }\n\n    async componentWillUnmount () {\n        window.removeEventListener('resize', this.onWindowResizeThrottled)\n        window.removeEventListener('keypress', this.onKeypress)\n        this.removeBackgroundEventListeners()\n        this.clear()\n        this.disposeToneEvents()\n    }\n\n    createRound () {\n        //console.log('createRound()');\n        this.round = _.cloneDeep(this.props.round)\n        this.userColors = this.getUserColors()\n        // Create SVG container\n        this.containerWidth = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n        this.containerHeight = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n        const roundElement = document.getElementById('round')\n        roundElement.style.width = this.containerWidth + 'px'\n        roundElement.style.height = this.containerHeight + 'px'\n        this.container = SVG()\n            .addTo(roundElement)\n            .size(this.containerWidth, this.containerHeight)\n            .panZoom({ zoomMin: 0.2, zoomMax: 1.3, zoomFactor: 0.2 })\n        this.container.on('panning', (e) => {\n            //  console.log('round panning');\n            if (this.stepIsPanning) {\n                e.preventDefault()\n            }\n        })\n        this.container.viewbox(0, 0, this.containerWidth, this.containerHeight)\n        this.draw()\n    }\n\n    async componentDidUpdate () {\n        console.log('componentDidUpdate()', this.props.round)\n\n        // Calculate what's changed so we only redraw if necessary\n        let redraw = false\n        const _this = this\n\n        if (this.round.id !== this.props.round.id) {\n            // whole round has changed\n            this.round = _.cloneDeep(this.props.round)\n            AudioEngine.load(this.props.round)\n            this.draw()\n            return\n        }\n\n        if (this.round.bpm !== this.props.round.bpm) {\n            this.round.bpm = this.props.round.bpm\n            AudioEngine.setTempo(this.round.bpm)\n            this.reclaculateIndicatorAnimation()\n            this.adjustAllLayerOffsets()\n        }\n\n        // User profile color changed\n        const userColors = this.getUserColors()\n        if (!_.isEqual(userColors, this.userColors)) {\n            this.userColors = userColors\n            redraw = true\n        }\n\n        // Edit all interactions changed\n        if (this.editAllLayers !== this.props.editAllLayers) {\n            this.editAllLayers = this.props.editAllLayers\n            this.removeAllStepEventListeners()\n            for (let layerGraphic of this.layerGraphics) {\n                if (this.editAllLayers) {\n                    layerGraphic.isAllowedInteraction = true\n                } else {\n                    //  console.log('layer', _.find(this.props.round.layers, { id: layerGraphic.id }));\n                    const layer = _.find(this.props.round.layers, { id: layerGraphic.id })\n                    if (!_.isNil(layer)) {\n                        layerGraphic.isAllowedInteraction = layer.createdBy === this.props.user.id\n                    }\n                }\n                this.addLayerEventListeners(layerGraphic)\n            }\n            for (let stepGraphic of this.stepGraphics) {\n                if (this.editAllLayers) {\n                    stepGraphic.isAllowedInteraction = true\n                } else {\n                    stepGraphic.isAllowedInteraction = this.stepLayerDictionary[stepGraphic.id].createdBy === this.props.user.id\n                }\n                this.addStepEventListeners(stepGraphic)\n            }\n        }\n\n        if (!this.isOn && this.props.isOn && !_.isNil(this.positionLine)) {\n            //console.log('playing timeline');\n            // adding 200ms delay to compensate for starting audio with delay to reduce audio glitches. Todo: sync this better with the transport\n            _.delay(() => {\n                this.positionLine.timeline().play()\n                this.isOn = true\n            }, 200)\n        } else if (this.isOn && !this.props.isOn && !_.isNil(this.positionLine)) {\n            //console.log('pausing timeline');\n            _.delay(() => {\n                this.positionLine.timeline().stop()\n                this.isOn = false\n            }, 200)\n        }\n\n        //if (this.round.layers.length < this.props.round.layers.length) {\n        // check for one or more layers added\n        this.cacheStepLayers()\n        for (let layer of this.props.round.layers) {\n            let oldLayer = _.find(this.round.layers, { id: layer.id })\n            if (_.isNil(oldLayer)) {\n                await AudioEngine.createTrack(layer)\n                redraw = true\n            }\n        }\n        // } else if (this.round.layers.length > this.props.round.layers.length) {\n        // check for one or more layers removed\n        // this.cacheStepLayers()\n        for (let layer of this.round.layers) {\n            let newLayer = _.find(this.props.round.layers, { id: layer.id })\n            if (_.isNil(newLayer)) {\n                AudioEngine.removeTrack(layer.id)\n                redraw = true\n            }\n        }\n        //    }\n\n        // check for number of steps per layer changed\n        let previousSteps = []\n        for (let i = 0; i < this.round.layers.length; i++) {\n            const layer = this.round.layers[i]\n            previousSteps.push(...layer.steps)\n            const newLayer = _.find(this.props.round.layers, { id: layer.id })\n            if (!_.isNil(newLayer)) {\n                if (newLayer.steps.length !== layer.steps.length) {\n                    // number of steps has changed\n                    redraw = true\n                    AudioEngine.recalculateParts(this.props.round)\n                }\n            }\n        }\n\n        // Check if an individual step has changed\n        let newSteps = []\n        for (let layer of this.props.round.layers) {\n            for (let newStep of layer.steps) {\n                newSteps.push(newStep)\n            }\n\n        }\n        for (let previousStep of previousSteps) {\n            let newStep = _.find(newSteps, { id: previousStep.id })\n            if (!_.isNil(newStep)) {\n                if (!_.isEqual(previousStep, newStep)) {\n                    //   console.log('found changed step', previousStep, newStep);\n                    this.updateStep(newStep, true)\n                    AudioEngine.recalculateParts(this.props.round)\n                }\n            }\n        }\n\n        // Check for layer type or instrument changes\n        for (let layer of this.round.layers) {\n            let newLayer = _.find(this.props.round.layers, { id: layer.id })\n            if (!_.isNil(newLayer) && !_.isEqual(layer.instrument, newLayer.instrument)) {\n                // instrument has changed\n                AudioEngine.tracksById[newLayer.id].setInstrument(newLayer.instrument)\n            }\n            if (!_.isNil(newLayer) && !_.isEqual(layer.type, newLayer.type)) {\n                // type has changed\n                //console.log('layer type has changed');\n                AudioEngine.tracksById[newLayer.id].setType(newLayer.type, newLayer.automationFxId)\n            }\n            if (!_.isNil(newLayer) && !_.isEqual(layer.automationFxId, newLayer.automationFxId)) {\n                // automation has changed\n                //  console.log('layer automation fx id has changed');\n                AudioEngine.tracksById[newLayer.id].setAutomatedFx(newLayer.automationFxId)\n            }\n        }\n        // Check for gain changes\n        for (let layer of this.round.layers) {\n            let newLayer = _.find(this.props.round.layers, { id: layer.id })\n            if (!_.isNil(newLayer) && !_.isEqual(layer.gain, newLayer.gain)) {\n                console.log('gain has changed', newLayer.gain)\n                AudioEngine.tracksById[newLayer.id].setVolume(newLayer.gain)\n            }\n        }\n\n        // Check for mute changes\n        for (let layer of this.round.layers) {\n            let newLayer = _.find(this.props.round.layers, { id: layer.id })\n            if (!_.isNil(newLayer) && !_.isEqual(layer.isMuted, newLayer.isMuted)) {\n                console.log('mute has changed', newLayer.isMuted)\n                AudioEngine.tracksById[newLayer.id].setMute(newLayer.isMuted)\n            }\n        }\n\n        // Check for layer time offset changes\n        for (let layer of this.round.layers) {\n            let newLayer = _.find(this.props.round.layers, { id: layer.id })\n            if (!_.isNil(newLayer) && !_.isEqual(layer.timeOffset, newLayer.timeOffset)) {\n                console.log('timeOffset has changed')\n                AudioEngine.recalculateParts(this.props.round)\n                this.adjustLayerOffset(newLayer.id, newLayer.percentOffset, newLayer.timeOffset)\n            }\n            if (!_.isNil(newLayer) && !_.isEqual(layer.percentOffset, newLayer.percentOffset)) {\n                console.log('percentOffset has changed')\n                AudioEngine.recalculateParts(this.props.round)\n                this.adjustLayerOffset(newLayer.id, newLayer.percentOffset, newLayer.timeOffset)\n            }\n        }\n\n        if (redraw) {\n            this.clear()\n            this.round = _.cloneDeep(this.props.round)\n            _this.draw(false)\n        } else {\n            this.round = _.cloneDeep(this.props.round)\n        }\n    }\n\n    getStep (id) {\n        let steps = []\n        for (let layer of this.round.layers) {\n            steps.push(...layer.steps)\n        }\n        return _.find(steps, { id })\n    }\n\n    draw (shouldAnimate) {\n        console.log('draw()', this.containerWidth, this.containerheight);\n        this.clear()\n        const _this = this\n\n        this.orderLayers()\n        this.cacheStepLayers()\n\n\n\n        // position line\n        /*  this.isOn = this.props.isOn\n          const positionLineLength = (HTML_UI_Params.addNewLayerButtonDiameter / 2) + (HTML_UI_Params.initialLayerPadding / 2) + ((HTML_UI_Params.stepDiameter + HTML_UI_Params.layerPadding) * this.round.layers.length)\n  \n          const positionLineWidth = 16\n          const positionLineTime = (60 / this.round.bpm) * 4000\n          this.positionLine = this.container.rect(positionLineWidth, positionLineLength).fill('#666666')\n          this.positionLine.move((this.containerWidth / 2) - (positionLineWidth / 2), (this.containerHeight / 2) - positionLineLength)\n          this.positionLineAnimation = this.positionLine.animate({ duration: positionLineTime }).ease('-').transform({ rotate: 360, relative: true, origin: 'bottom center' }).loop()\n          if (!this.isOn) {\n              this.positionLine.timeline().pause()\n          } else {\n              this.positionLine.timeline().seek(AudioEngine.getPositionMilliseconds())\n          }*/\n        // draw layers\n        this.stepGrahpics = []\n        this.layerGraphics = []\n        let i = 0\n        for (const layer of this.round.layers) {\n            // add order parameter so we can calculate offsets (todo: add this when we create a layer?)\n            this.addLayer(layer, i++, shouldAnimate)\n        }\n        // Create activity line\n        this.drawAvatars()\n        this.activityIndicator = this.container.circle(HTML_UI_Params.activityIndicatorDiameter).fill({ color: '#fff', opacity: 0 })\n\n        // add layer button\n        this.addLayerButton = this.container.circle(HTML_UI_Params.addNewLayerButtonDiameter).attr({ fill: '#1B1B1B' }).stroke({ width: 1, color: this.userColors[this.props.user.id], dasharray: '5,5' })\n        this.addLayerButton.x((this.containerWidth / 2) - (HTML_UI_Params.addNewLayerButtonDiameter / 2))\n        this.addLayerButton.y((this.containerHeight / 2) - (HTML_UI_Params.addNewLayerButtonDiameter / 2))\n        this.addLayerButton.click(() => {\n            _this.onAddLayerClick()\n        })\n        this.addLayerButton.addClass(this.props.classes.button)\n        //this.addLayerButton.svg('<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\"><path d=\"M0 0h24v24H0z\" fill=\"white\"/><path fill=\"white\" d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>')\n        this.addLayerButtonIcon = this.container.nested()\n        this.addLayerButtonIcon.svg('<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"' + this.userColors[this.props.user.id] + '\" width=\"48px\" height=\"48px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>')\n        this.addLayerButtonIcon.x((this.containerWidth / 2) - 24)\n        this.addLayerButtonIcon.y((this.containerHeight / 2) - 25)\n        this.addLayerButtonIcon.addClass(this.props.classes.buttonIcon)\n\n        this.stepModal = this.container.nested()\n        this.stepModalBackground = this.stepModal.rect(HTML_UI_Params.stepModalDimensions, HTML_UI_Params.stepModalDimensions).fill({ color: '#000', opacity: 0.8 }).radius(HTML_UI_Params.stepModalThumbDiameter / 2)\n\n        this.stepModalProbabilityText = this.stepModal.text('Probability')\n        this.stepModalProbabilityText.fill('#545454')\n        this.stepModalProbabilityText.font({\n            size: 16,\n            weight: 500\n        })\n        this.stepModalProbabilityText.x(HTML_UI_Params.stepModalDimensions - 135)\n        this.stepModalProbabilityText.y(HTML_UI_Params.stepModalDimensions - 30)\n\n        this.stepModalVelocityText = this.stepModal.text('Velocity')\n        this.stepModalVelocityText.fill('#545454')\n        this.stepModalVelocityText.font({\n            size: 16,\n            weight: 500\n        })\n        this.stepModalVelocityText.transform({ rotate: 270 })\n        this.stepModalVelocityText.x(120 - HTML_UI_Params.stepModalDimensions)\n        this.stepModalVelocityText.y(0)\n\n        this.stepModalThumb = this.stepModal.circle(HTML_UI_Params.stepModalThumbDiameter)\n        this.stepModalThumb.fill(this.userColors[this.props.user.id])\n\n        this.stepModal.hide()\n\n        if (!_.isNil(this.highlightNewLayer)) {\n            // this.onLayerClicked(this.highlightNewLayer)\n            this.props.dispatch({ type: SET_SELECTED_LAYER_ID, payload: { layerId: this.highlightNewLayer } })\n            this.props.dispatch({ type: SET_IS_SHOWING_LAYER_SETTINGS, payload: { value: true } })\n            this.highlightNewLayer = null;\n        }\n\n        this.scheduleToneEvents()\n    }\n\n    scheduleToneEvents () {\n        this.disposeToneEvents()\n        const _this = this\n        this.toneParts = []\n        for (const layer of this.round.layers) {\n            const notes = this.convertStepsToNotes(layer.steps, this.userColors[layer.createdBy])\n            for (let note of notes) {\n                note.time += 'i';\n            }\n            let part = new Tone.Part(function (time, note) {\n                Tone.Draw.schedule(function () {\n                    const stepGraphic = _.find(_this.stepGraphics, { id: note.id })\n                    if (!_.isNil(stepGraphic)) {\n                        stepGraphic.stroke({ color: '#FFFFFF' })\n                        stepGraphic.animate().stroke({ color: note.color })\n                    }\n\n                }, time)\n            }, notes)\n            part.start(0)\n            _this.toneParts.push(part)\n        }\n    }\n\n    disposeToneEvents () {\n        if (!_.isNil(this.toneParts)) {\n            for (let part of this.toneParts) {\n                if (!_.isNil(part) && !_.isNil(part._events)) {\n                    part.dispose()\n                }\n            }\n        }\n    }\n\n    convertStepsToNotes (steps, userColor) {\n        const PPQ = Tone.Transport.PPQ\n        const totalTicks = PPQ * 4\n        const ticksPerStep = Math.round(totalTicks / steps.length)\n        let notes = []\n        for (let i = 0; i < steps.length; i++) {\n            let step = steps[i]\n            const note = {\n                time: i * ticksPerStep,\n                id: step.id,\n                isOn: step.isOn,\n                color: userColor\n            }\n            notes.push(note)\n        }\n        return notes\n    }\n\n    clear () {\n        this.removeAllStepEventListeners()\n        this.removeAllLayerEventListeners()\n        if (!_.isNil(this.layerGrahpics)) {\n            for (let layerGrahpic of this.layerGrahpics) {\n                layerGrahpic.clear()\n            }\n        }\n\n        if (!_.isNil(this.stepGrahpics)) {\n            for (let stepGraphic of this.stepGraphics) {\n                stepGraphic.clear()\n            }\n        }\n        this.stepGraphics = []\n        if (!_.isNil(this.container)) {\n            this.container.clear()\n        }\n        if (!_.isNil(this.addLayerButton)) {\n            this.addLayerButton.click(null)\n        }\n    }\n\n    reclaculateIndicatorAnimation () {\n        /* if (!_.isNil(this.positionLineAnimation)) {\n             this.positionLineAnimation.unschedule()\n         }\n         const positionLineTime = (60 / this.round.bpm) * 4000\n         this.positionLineAnimation = this.positionLine.animate({ duration: positionLineTime }).ease('-').transform({ rotate: 360, relative: true, origin: 'bottom center' }).loop()\n         if (!this.isOn) {\n             this.positionLine.timeline().pause()\n         } else {\n             this.positionLine.timeline().seek(AudioEngine.getPositionMilliseconds())\n         }*/\n    }\n\n    addLayer (layer, order, shouldAnimate = true) {\n        // console.log('addLayer', layer);\n        let animateTime = shouldAnimate ? 600 : 0\n\n        const layerDiameter = HTML_UI_Params.addNewLayerButtonDiameter + HTML_UI_Params.initialLayerPadding + ((HTML_UI_Params.stepDiameter + HTML_UI_Params.layerPadding + HTML_UI_Params.layerPadding + HTML_UI_Params.stepDiameter) * (order + 1))\n        const xOffset = (this.containerWidth / 2) - (layerDiameter / 2)\n        const yOffset = (this.containerHeight / 2) - (layerDiameter / 2)\n        const layerGraphic = this.container.circle(layerDiameter, layerDiameter).attr({ fill: 'none' }).stroke({ color: this.userColors[layer.createdBy], width: HTML_UI_Params.layerStrokeMax + 'px', opacity: 0 })\n        layerGraphic.x(xOffset)\n        layerGraphic.y(yOffset)\n        layerGraphic.id = layer.id\n        layerGraphic.order = order\n        layerGraphic.isAllowedInteraction = layer.createdBy === this.props.user.id\n        if (layer.id === this.selectedLayerId) {\n            layerGraphic.animate().stroke({ opacity: HTML_UI_Params.layerStrokeOpacity * 2 })\n        } else {\n            layerGraphic.animate(animateTime).stroke({ opacity: HTML_UI_Params.layerStrokeOpacity })\n        }\n        if (layerGraphic.isAllowedInteraction) {\n            layerGraphic.addClass(this.props.classes.button)\n        }\n        this.addLayerEventListeners(layerGraphic)\n        this.layerGraphics.push(layerGraphic)\n\n        // draw steps\n        const stepSize = (2 * Math.PI) / layer.steps.length;\n        const radius = layerDiameter / 2;\n        let angle = Math.PI / -2; // start at -90 degrees so first step is at top\n        const anglePercentOffset = this.ticksToRadians(this.ticksPerStep(layer.steps.length) * (layer.percentOffset / 100))\n        const angleTimeOffset = this.ticksToRadians(this.msToTicks(layer.timeOffset))\n        //const angleOffset = (((Math.PI * 2) / layer.steps.length) * (layer.timeOffset / 100))\n        angle += anglePercentOffset\n        angle += angleTimeOffset\n        for (let step of layer.steps) {\n            const x = Math.round(layerDiameter / 2 + radius * Math.cos(angle) - HTML_UI_Params.stepDiameter / 2) + xOffset;\n            const y = Math.round(layerDiameter / 2 + radius * Math.sin(angle) - HTML_UI_Params.stepDiameter / 2) + yOffset;\n            const stepGraphic = this.container.circle(HTML_UI_Params.stepDiameter)\n            stepGraphic.stroke({ color: this.userColors[layer.createdBy], width: HTML_UI_Params.stepStrokeWidth + 'px', opacity: 0 })\n            stepGraphic.animate(animateTime).stroke({ opacity: 1 })\n            stepGraphic.x(x)\n            stepGraphic.y(y)\n            angle += stepSize\n            stepGraphic.layerId = layer.id\n            stepGraphic.id = step.id\n            stepGraphic.isAllowedInteraction = layer.createdBy === this.props.user.id\n            stepGraphic.userColor = this.userColors[layer.createdBy]\n            if (layer.createdBy === this.props.user.id) {\n                stepGraphic.addClass(this.props.classes.button)\n            }\n            this.stepGraphics.push(stepGraphic)\n            this.updateStep(step)\n            this.addStepEventListeners(stepGraphic)\n        }\n\n    }\n\n    updateStep (step, showActivityIndicator = false) {\n        //  console.log('updateStep', step);\n        if (!_.isEmpty(this.stepGraphics) && !_.isNil(step)) {\n            const layer = this.stepLayerDictionary[step.id]\n            const stepGraphic = _.find(this.stepGraphics, { id: step.id })\n            //console.log('updating step', stepGraphic, step.isOn, this.props.user.color);\n            const _this = this\n            if (showActivityIndicator) {\n                // add delay so that graphic updates after activity indicator hits it\n                _.delay(() => {\n                    if (step.isOn) {\n                        stepGraphic.animate(HTML_UI_Params.stepAnimationUpdateTime).attr({ fill: _this.userColors[layer.createdBy], 'fill-opacity': step.probability })\n                        stepGraphic.animate(HTML_UI_Params.stepAnimationUpdateTime).transform({\n                            scale: numberRange(step.velocity, 0, 1, 0.5, 1)\n                        })\n                    } else {\n                        stepGraphic.animate(HTML_UI_Params.stepAnimationUpdateTime).attr({ fill: '#101114' })\n                    }\n                }, HTML_UI_Params.activityAnimationTime)\n                this.animateActivityIndicator(layer.createdBy, stepGraphic.x() + (HTML_UI_Params.stepDiameter / 2), stepGraphic.y() + (HTML_UI_Params.stepDiameter / 2))\n            } else {\n                //console.log('updateStep()', step.isOn);\n                if (step.isOn) {\n                    stepGraphic.attr({ fill: _this.userColors[layer.createdBy], 'fill-opacity': step.probability })\n                    stepGraphic.transform({\n                        scale: numberRange(step.velocity, 0, 1, 0.5, 1)\n                    })\n                } else {\n                    stepGraphic.attr({ fill: '#101114', 'fill-opacity': 1 })\n                }\n            }\n        }\n    }\n\n    highlightLayer (layerGraphic, unhighlightExceptLayerId) {\n        this.unhighlightAllLayers(unhighlightExceptLayerId)\n        // layerGraphic.animate().stroke({ opacity: HTML_UI_Params.layerStrokeOpacity * 2 })\n        layerGraphic.stroke({ opacity: HTML_UI_Params.layerStrokeOpacity * 2 })\n    }\n\n    unhighlightAllLayers (exceptLayerId) {\n        for (const layerGraphic of this.layerGraphics) {\n            if (layerGraphic.id !== exceptLayerId) {\n                layerGraphic.stroke({ opacity: HTML_UI_Params.layerStrokeOpacity })\n            }\n        }\n    }\n\n    cacheStepLayers () {\n        this.stepLayerDictionary = {}\n        for (let layer of this.props.round.layers) {\n            for (let step of layer.steps) {\n                this.stepLayerDictionary[step.id] = layer\n            }\n        }\n    }\n\n    adjustAllLayerOffsets () {\n        for (const layer of this.round.layers) {\n            this.adjustLayerOffset(layer.id, layer.percentOffset, layer.timeOffset)\n        }\n    }\n\n    adjustLayerOffset (id, percentOffset, timeOffset) {\n        // console.log('adjustLayerTimeOffset', layer., percent, this.stepGraphics);\n        const layer = _.find(this.round.layers, { id })\n        let stepGraphics = _.filter(this.stepGraphics, { layerId: id })\n        const layerGraphic = _.find(this.layerGraphics, { id })\n        const layerDiameter = HTML_UI_Params.addNewLayerButtonDiameter + HTML_UI_Params.initialLayerPadding + ((HTML_UI_Params.stepDiameter + HTML_UI_Params.layerPadding + HTML_UI_Params.layerPadding + HTML_UI_Params.stepDiameter) * (layerGraphic.order + 1))\n        const xOffset = (this.containerWidth / 2) - (layerDiameter / 2)\n        const yOffset = (this.containerHeight / 2) - (layerDiameter / 2)\n        const stepSize = (2 * Math.PI) / layer.steps.length;\n        const radius = layerDiameter / 2;\n        let angle = Math.PI / -2; // start at -90 degrees so first step is at top\n        // const angleOffset = (((Math.PI * 2) / layer.steps.length) * (percent / 100))\n        const anglePercentOffset = this.ticksToRadians(this.ticksPerStep(layer.steps.length) * (percentOffset / 100))\n        const angleTimeOffset = this.ticksToRadians(this.msToTicks(timeOffset))\n        angle += anglePercentOffset\n        angle += angleTimeOffset\n        for (let stepGraphic of stepGraphics) {\n            const x = Math.round(layerDiameter / 2 + radius * Math.cos(angle) - HTML_UI_Params.stepDiameter / 2) + xOffset;\n            const y = Math.round(layerDiameter / 2 + radius * Math.sin(angle) - HTML_UI_Params.stepDiameter / 2) + yOffset;\n            stepGraphic.x(x)\n            stepGraphic.y(y)\n            angle += stepSize\n        }\n    }\n\n    ticksPerStep (numberOfSteps) {\n        const PPQ = Tone.Transport.PPQ\n        const totalTicks = PPQ * 4\n        return Math.round(totalTicks / numberOfSteps)\n    }\n\n    ticksToRadians (ticks) {\n        const PPQ = Tone.Transport.PPQ\n        const totalTicks = PPQ * 4\n        return ((Math.PI * 2) / totalTicks) * ticks\n    }\n\n    msToTicks (ms) {\n        const BPM = Tone.Transport.bpm.value\n        const PPQ = Tone.Transport.PPQ\n        const msPerBeat = 60000 / BPM\n        const msPerTick = msPerBeat / PPQ\n        return Math.round(ms / msPerTick)\n    }\n\n    drawAvatars () {\n        if (!_.isNil(this.props.collaboration)) {\n            this.avatarGraphics = []\n            const numberOfContributors = Object.entries(this.props.collaboration.contributors).length\n            const totalAvatarHeight = (HTML_UI_Params.avatarDiameter * numberOfContributors) + (HTML_UI_Params.avatarPadding * (numberOfContributors - 1))\n            const offsetY = (this.containerHeight / 2) - (totalAvatarHeight / 2)\n            let x = (this.containerWidth / 2) + (HTML_UI_Params.addNewLayerButtonDiameter / 2) + (HTML_UI_Params.initialLayerPadding / 2) + ((HTML_UI_Params.stepDiameter + HTML_UI_Params.layerPadding) * (this.round.layers.length)) + HTML_UI_Params.avatarRoundPadding\n            let y = 0\n            for (let [id, contributor] of Object.entries(this.props.collaboration.contributors)) {\n                let avatarGraphic = this.container.circle(HTML_UI_Params.avatarDiameter).attr({ fill: contributor.color })\n                avatarGraphic.x(x)\n                avatarGraphic.y(y + offsetY)\n                avatarGraphic.id = id\n                this.avatarGraphics.push(avatarGraphic)\n                y += HTML_UI_Params.avatarDiameter + HTML_UI_Params.avatarPadding\n            }\n        }\n    }\n\n    updateAvatarPositions (numberOfLayers) {\n        if (!_.isEmpty(this.avatarGraphics)) {\n            let x = (this.containerWidth / 2) + (HTML_UI_Params.addNewLayerButtonDiameter / 2) + (HTML_UI_Params.initialLayerPadding / 2) + ((HTML_UI_Params.stepDiameter + HTML_UI_Params.layerPadding) * numberOfLayers) + HTML_UI_Params.avatarRoundPadding\n            for (let avatarGraphic of this.avatarGraphics) {\n                avatarGraphic.x(x)\n            }\n        }\n    }\n\n    animateActivityIndicator (userId, toX, toY) {\n        const avatarGraphic = _.find(this.avatarGraphics, { id: userId })\n        if (!_.isNil(this.activityIndicator) && !_.isNil(avatarGraphic)) {\n            this.activityIndicator.fill({ color: this.userColors[userId], opacity: 1 })\n            const fromX = avatarGraphic.x() + (HTML_UI_Params.avatarDiameter / 2)\n            const fromY = avatarGraphic.y() + (HTML_UI_Params.avatarDiameter / 2)\n            toX -= HTML_UI_Params.activityIndicatorDiameter / 2\n            toY -= HTML_UI_Params.activityIndicatorDiameter / 2\n            this.activityIndicator.move(fromX, fromY)\n            const animation = this.activityIndicator.animate(HTML_UI_Params.activityAnimationTime).move(toX, toY)//.animate(HTML_UI_Params.activityAnimationTime * 1.3).fill({ opacity: 0 })\n            animation.after(() => {\n                this.activityIndicator.animate().fill({ opacity: 0 })\n            })\n        }\n    }\n\n    addLayerEventListeners (layerGraphic) {\n        const _this = this\n        if (layerGraphic.isAllowedInteraction) {\n            layerGraphic.click(function (e) {\n                e.stopPropagation()\n                //_this.onLayerClicked(layerGraphic.id)\n            })\n            layerGraphic.on('mousedown', function (e) {\n                e.stopPropagation()\n                _this.onLayerClicked(layerGraphic.id)\n            })\n            layerGraphic.on('mouseover', function (e) {\n                //console.log('layer mouseover');\n                e.stopPropagation()\n                _this.onLayerOver(layerGraphic)\n            })\n            layerGraphic.on('mouseout', function (e) {\n                //console.log('layer mouseout');\n                e.stopPropagation()\n                _this.onLayerOut(layerGraphic)\n            })\n            layerGraphic.on('touchstart', (e) => {\n                _this.onLayerTouchStart(layerGraphic, e)\n            })\n            layerGraphic.on('touchend', (e) => {\n                _this.onLayerTouchEnd(layerGraphic, e)\n            })\n        }\n    }\n    onLayerTouchStart (layerGraphic, e) {\n        e.preventDefault()\n        const _this = this\n        this.layerTouchTimer = setTimeout(() => {\n            _this.onLayerClicked(layerGraphic.id)\n        }, 500)\n    }\n    onLayerTouchEnd (layerGraphic) {\n        if (this.layerTouchTimer) {\n            clearTimeout(this.layerTouchTimer)\n        }\n    }\n    onLayerClicked (layerId) {\n        this.selectedLayerId = layerId\n        this.props.dispatch({ type: SET_SELECTED_LAYER_ID, payload: { layerId } })\n        this.props.dispatch({ type: SET_IS_SHOWING_LAYER_SETTINGS, payload: { value: true } })\n        this.highlightLayer(_.find(this.layerGraphics, { id: layerId }))\n    }\n    onLayerOver (layerGraphic) {\n        this.highlightLayer(layerGraphic, this.selectedLayerId)\n    }\n    onLayerOut (layerGraphic) {\n        this.unhighlightAllLayers(this.selectedLayerId)\n    }\n\n    orderLayers () {\n        // order layers\n        this.round.layers = _.sortBy(this.round.layers, 'createdAt')\n        let myLayers = _.filter(this.round.layers, { createdBy: this.props.user.id })\n        myLayers = _.sortBy(myLayers, 'createdAt')\n        myLayers.reverse()\n        let collaboratorLayers = _.filter(this.round.layers, (layer) => {\n            return layer.createdBy !== this.props.user.id\n        })\n        collaboratorLayers = _.sortBy(collaboratorLayers, ['createdBy', 'createdAt'])\n        this.round.layers = [...myLayers, ...collaboratorLayers]\n    }\n\n    orderSteps () {\n        for (const layer of this.round.layers) {\n            layer.steps = _.orderBy(layer.steps, 'order')\n        }\n    }\n\n    addStepEventListeners (stepGraphic) {\n        const _this = this\n        if (stepGraphic.isAllowedInteraction) {\n            stepGraphic.on('mousedown', (e) => {\n                e.stopPropagation()\n                e.preventDefault()\n                _this.startStepMoveTimer(stepGraphic, e.pageX, e.pageY)\n\n                _this.container.on('mouseup', (e) => {\n                    e.stopPropagation()\n                    _this.container.off('mousemove')\n                    _this.container.off('mouseup')\n                    _this.hideStepModal()\n                    if (!_.isNil(_this.stepMoveTimer)) {\n                        // timer has not expired, so interpret as a click\n                        _this.clearShowStepModalTimer()\n                        _this.onStepClick(stepGraphic)\n                    } else {\n                        _this.onStepDragEnd(stepGraphic)\n                    }\n                })\n            })\n            stepGraphic.on('touchstart', (e) => {\n                e.stopPropagation()\n                e.preventDefault()\n                _this.startStepMoveTimer(stepGraphic, e.touches[0].pageX, e.touches[0].pageY)\n            })\n\n            stepGraphic.on('touchend', (e) => {\n                _this.hideStepModal()\n                if (!_.isNil(_this.stepMoveTimer)) {\n                    // timer has not expired, so interpret as a click\n                    _this.clearShowStepModalTimer()\n                    _this.onStepClick(stepGraphic)\n                } else {\n                    _this.onStepDragEnd(stepGraphic)\n                }\n            })\n            stepGraphic.on('touchmove', (e) => {\n                _this.onStepDragMove(stepGraphic, e.touches[0].pageX, e.touches[0].pageY)\n            })\n\n        }\n    }\n    startStepMoveTimer (stepGraphic, x, y) {\n        const _this = this\n        this.clearShowStepModalTimer()\n        this.stepMoveTimer = setTimeout(function () {\n            const step = _this.getStep(stepGraphic.id)\n            if (step.isOn) {\n                _this.showStepModal(stepGraphic, x, y)\n            }\n        }, 500)\n    }\n\n    showStepModal (stepGraphic, pageX, pageY) {\n        this.clearShowStepModalTimer()\n        this.stepModal.show()\n        stepGraphic.startX = pageX\n        stepGraphic.startY = pageY\n        const step = this.getStep(stepGraphic.id)\n        stepGraphic.isOn = step.isOn\n        stepGraphic.probabilityPanStart = stepGraphic.probability = step.probability;\n        stepGraphic.velocityPanStart = stepGraphic.velocity = step.velocity;\n        this.updateStepModal(stepGraphic)\n        const _this = this\n        this.container.on('mousemove', (e) => {\n            e.preventDefault()\n            _this.onStepDragMove(stepGraphic, e.pageX, e.pageY)\n        })\n\n    }\n\n    hideStepModal () {\n        this.stepModal.hide()\n    }\n\n    clearShowStepModalTimer () {\n        // console.log('clearShowStepModalTimer', this.stepMoveTimer);\n        clearTimeout(this.stepMoveTimer)\n        this.stepMoveTimer = null\n    }\n\n    onStepDragMove (stepGraphic, x, y) {\n        let deltaX = x - stepGraphic.startX\n        let deltaY = y - stepGraphic.startY\n        //console.log('onStepDragMove', this.isZooming, stepGraphic.isOn, deltaX, deltaY, stepGraphic.isPanningX);\n        if (!this.isZooming && stepGraphic.isOn) {\n            if (deltaX < -100) {\n                deltaX = -100\n            }\n            deltaX = deltaX / 100\n            stepGraphic.probability = stepGraphic.probabilityPanStart + deltaX\n            if (stepGraphic.probability < 0) {\n                stepGraphic.probability = 0\n            } else if (stepGraphic.probability > 1) {\n                stepGraphic.probability = 1\n            }\n\n            if (deltaY < -100) {\n                deltaY = -100\n            }\n            deltaY = deltaY / -100\n            //delta += 1\n            //stepGraphic.velocity = delta * stepGraphic.velocityPanStart;\n            stepGraphic.velocity = stepGraphic.velocityPanStart + deltaY;\n            if (stepGraphic.velocity < 0) {\n                stepGraphic.velocity = 0\n            } else if (stepGraphic.velocity > 1) {\n                stepGraphic.velocity = 1\n            }\n\n            stepGraphic.transform({\n                scale: numberRange(stepGraphic.velocity, 0, 1, 0.5, 1)\n            })\n            stepGraphic.fill({ opacity: stepGraphic.probability })\n            this.updateStepModal(stepGraphic)\n        }\n    }\n\n    onStepDragEnd (stepGraphic) {\n        if (stepGraphic.isOn) {\n            const step = this.getStep(stepGraphic.id)\n            step.probability = _.round(stepGraphic.probability, 1)\n            // this.props.dispatch({ type: SET_STEP_PROBABILITY, payload: { probability: step.probability, layerId: stepGraphic.layerId, stepId: stepGraphic.id, user: this.props.user.id } })\n            step.velocity = _.round(stepGraphic.velocity, 1)\n            // this.props.dispatch({ type: SET_STEP_VELOCITY, payload: { velocity: step.velocity, layerId: stepGraphic.layerId, stepId: stepGraphic.id, user: this.props.user.id } })\n            this.props.dispatch({ type: UPDATE_STEP, payload: { step: step, layerId: stepGraphic.layerId } })\n            this.saveLayer(stepGraphic.layerId)\n        }\n        AudioEngine.recalculateParts(this.props.round)\n    }\n\n\n    /*addStepEventListeners (stepGraphic) {\n        const _this = this\n        if (stepGraphic.isAllowedInteraction) {\n            stepGraphic.on('mousedown', (e) => {\n                e.stopPropagation()\n                e.preventDefault()\n                _this.startStepMoveTimer(stepGraphic, e.pageX, e.pageY)\n\n                _this.container.on('mousemove', (e) => {\n                    e.preventDefault()\n                    if (!this.stepIsPanning) {\n                        _this.onStepDragStart(stepGraphic, e.pageX, e.pageY)\n                    }\n                    _this.onStepDragMove(stepGraphic, e.pageX, e.pageY)\n                })\n                _this.container.on('mouseup', (e) => {\n                    e.stopPropagation()\n                    _this.container.off('mousemove')\n                    _this.container.off('mouseup')\n                    clearTimeout(_this.stepMoveTimer)\n                    console.log('mouseup', this.stepIsPanning);\n                    if (this.stepIsPanning) {\n                        _this.onStepDragEnd(stepGraphic)\n                    } else {\n                        _this.onStepClick(stepGraphic)\n                    }\n                })\n            })\n\n            stepGraphic.on('mouseover', (e) => {\n                _this.highlightStep(stepGraphic)\n            })\n            stepGraphic.on('mouseout', (e) => {\n                _this.unhighlightStep(stepGraphic)\n            })\n            stepGraphic.on('touchstart', (e) => {\n                _this.onStepDragStart(stepGraphic, e.touches[0].pageX, e.touches[0].pageY)\n            })\n\n            stepGraphic.on('touchend', (e) => {\n                _this.onStepDragEnd(stepGraphic)\n            })\n            stepGraphic.on('touchmove', (e) => {\n                _this.onStepDragMove(stepGraphic, e.touches[0].pageX, e.touches[0].pageY)\n            })\n        }\n    }\n\n    startStepMoveTimer (stepGraphic, x, y) {\n        const _this = this\n        this.stepMoveTimer = setTimeout(function () {\n            _this.onStepDragStart(stepGraphic, x, y)\n        }, 1000)\n    }\n\n    onStepDragStart (stepGraphic, x, y) {\n        console.log('onStepDragStart', stepGraphic, x, y,);\n        clearTimeout(this.stepMoveTimer)\n        this.stepIsPanning = true\n        stepGraphic.startX = x\n        stepGraphic.startY = y\n        const step = this.getStep(stepGraphic.id)\n        stepGraphic.isOn = step.isOn\n        stepGraphic.probabilityPanStart = stepGraphic.probability = step.probability;\n        stepGraphic.velocityPanStart = stepGraphic.velocity = step.velocity;\n        if (stepGraphic.isOn) {\n            this.stepModal.show()\n            this.updateStepModal(stepGraphic)\n        }\n    }\n    onStepDragMove (stepGraphic, x, y) {\n        let deltaX = x - stepGraphic.startX\n        let deltaY = y - stepGraphic.startY\n        //console.log('onStepDragMove', this.isZooming, stepGraphic.isOn, deltaX, deltaY, stepGraphic.isPanningX);\n        if (!this.isZooming && stepGraphic.isOn) {\n            if (deltaX < -100) {\n                deltaX = -100\n            }\n            deltaX = deltaX / 100\n            stepGraphic.probability = stepGraphic.probabilityPanStart + deltaX\n            if (stepGraphic.probability < 0) {\n                stepGraphic.probability = 0\n            } else if (stepGraphic.probability > 1) {\n                stepGraphic.probability = 1\n            }\n\n            if (deltaY < -100) {\n                deltaY = -100\n            }\n            deltaY = deltaY / -100\n            //delta += 1\n            //stepGraphic.velocity = delta * stepGraphic.velocityPanStart;\n            stepGraphic.velocity = stepGraphic.velocityPanStart + deltaY;\n            if (stepGraphic.velocity < 0) {\n                stepGraphic.velocity = 0\n            } else if (stepGraphic.velocity > 1) {\n                stepGraphic.velocity = 1\n            }\n\n            stepGraphic.transform({\n                scale: numberRange(stepGraphic.velocity, 0, 1, 0.5, 1)\n            })\n            stepGraphic.fill({ opacity: stepGraphic.probability })\n            this.updateStepModal(stepGraphic)\n        }\n    }\n    onStepDragEnd (stepGraphic) {\n        if (stepGraphic.isOn) {\n            const step = this.getStep(stepGraphic.id)\n            step.probability = stepGraphic.probability\n            step.velocity = stepGraphic.velocity\n            this.props.dispatch({ type: SET_STEP_PROBABILITY, payload: { probability: stepGraphic.probability, layerId: stepGraphic.layerId, stepId: stepGraphic.id, user: this.props.user.id } })\n            this.props.dispatch({ type: SET_STEP_VELOCITY, payload: { velocity: stepGraphic.velocity, layerId: stepGraphic.layerId, stepId: stepGraphic.id, user: this.props.user.id } })\n            this.saveLayer(stepGraphic.layerId)\n            this.stepIsPanning = false\n            //this.context.updateStep(this.round.id, stepGraphic.layerId, stepGraphic.id, step)\n        }\n        AudioEngine.recalculateParts(this.props.round)\n        this.stepIsPanning = false\n        this.stepModal.hide()\n        setTimeout(() => {\n            this.isPanning = false\n        }, 100)\n    }*/\n\n    highlightStep (stepGraphic) {\n        const layer = _.find(this.props.round.layers, { id: stepGraphic.layerId })\n        if (!_.isNil(layer)) {\n            stepGraphic.animate(HTML_UI_Params.stepAnimationUpdateTime).attr({ fill: this.userColors[layer.createdBy], 'fill-opacity': 1 })\n        }\n    }\n    unhighlightStep (stepGraphic) {\n        const step = this.getStep(stepGraphic.id)\n        if (!step.isOn) {\n            stepGraphic.animate(HTML_UI_Params.stepAnimationUpdateTime).attr({ fill: '#101114', 'fill-opacity': 1 })\n        }\n    }\n\n    saveLayer (id) {\n        this.context.updateLayer(this.round.id, id, _.find(this.round.layers, { id }))\n    }\n\n    removeAllStepEventListeners () {\n        for (let stepGraphic of this.stepGraphics) {\n            stepGraphic.click(null)\n            if (!_.isNil(stepGraphic.hammertime)) {\n                stepGraphic.hammertime.off('pan')\n                stepGraphic.hammertime.off('panstart')\n                stepGraphic.hammertime.off('panend')\n            }\n        }\n    }\n\n    removeAllLayerEventListeners () {\n        for (let layerGraphic of this.layerGraphics) {\n            layerGraphic.click(null)\n        }\n    }\n\n    updateStepModal (stepGraphic) {\n        //  console.log('updateStepModal', stepGraphic.probability, stepGraphic.velocity);\n        //this.stepModalText.text('Velocity: ' + _.round(stepGraphic.velocity, 1) + '\\nProbability: ' + _.round(stepGraphic.probability, 1))\n        this.stepModal.x(stepGraphic.x() - ((HTML_UI_Params.stepModalDimensions / 2) - HTML_UI_Params.stepDiameter / 2))\n        this.stepModal.y(stepGraphic.y() - ((HTML_UI_Params.stepModalDimensions / 2) - HTML_UI_Params.stepDiameter / 2))\n        this.stepModalThumb.x(stepGraphic.probability * (HTML_UI_Params.stepModalDimensions - HTML_UI_Params.stepModalThumbDiameter))\n        this.stepModalThumb.y((1 - stepGraphic.velocity) * (HTML_UI_Params.stepModalDimensions - HTML_UI_Params.stepModalThumbDiameter))\n    }\n\n    onStepClick (stepGraphic) {\n        let step = this.getStep(stepGraphic.id)\n        // console.log('onStepClick', step);\n\n        // update internal round so that it doesn't trigger another update when we receive a change after the dispatch\n        step.isOn = !step.isOn\n        this.updateStep(step, false)\n        AudioEngine.recalculateParts(this.round)\n        this.props.dispatch({ type: TOGGLE_STEP, payload: { layerId: stepGraphic.layerId, stepId: stepGraphic.id, isOn: step.isOn, user: null } })\n        // console.log('this.context', this.context);\n        this.saveLayer(stepGraphic.layerId)\n        //this.context.updateStep(this.round.id, stepGraphic.layerId, stepGraphic.id, step)\n\n    }\n\n    onAddLayerClick () {\n        const newLayer = getDefaultLayerData(this.props.user.id);\n        newLayer.name = 'Layer ' + (this.props.round.layers.length + 1)\n        this.props.dispatch({ type: ADD_LAYER, payload: { layer: newLayer, user: this.props.user.id } })\n        this.context.createLayer(this.round.id, newLayer)\n        this.highlightNewLayer = newLayer.id\n        this.selectedLayerId = newLayer.id\n        /* const newLayer = _.cloneDeep(this.props.round.layers[this.props.round.layers.length - 1])\n         newLayer.id = Math.round(Math.random() * 99999)\n         newLayer.order++;\n         for (const step of newLayer.steps) {\n             step.id = Math.round(Math.random() * 99999)\n             this.stepLayerDictionary[step.id] = newLayer\n         }\n         this.addLayer(newLayer, false)\n         AudioEngine.createTrack(newLayer)*/\n        // this.draw()\n    }\n\n    addEventListeners () {\n        //const element = document.getElementById('round')\n        //const hammertime = new Hammer(element, {});\n        //hammertime.get('pinch').set({ enable: true });\n    }\n    addBackgroundEventListeners () {\n        const element = document.getElementById('round')\n        element.addEventListener('click', this.onOutsideClick)\n    }\n    removeBackgroundEventListeners () {\n        const element = document.getElementById('round')\n        element.removeEventListener('click', this.onOutsideClick)\n    }\n    onOutsideClick () {\n        this.unhighlightAllLayers()\n        this.props.dispatch({ type: SET_IS_SHOWING_LAYER_SETTINGS, payload: { value: false } })\n        this.selectedLayerId = null\n    }\n    getUserColors () {\n        let userColors = {};\n        for (const user of this.props.users) {\n            userColors[user.id] = user.color\n        }\n        return userColors\n    }\n\n    onWindowResize (e) {\n        const _this = this\n        // some devices report incorrect orientation strightaway, however after around 500ms it seems to be correct.\n        setTimeout(() => {\n            const orientation = _this.getOrientation()\n            if (orientation === 'portrait') {\n                _this.showOrientationDialog()\n            } else {\n                _this.hideOrientationDialog()\n            }\n            if (!_.isNil(_this.container)) {\n                _this.containerWidth = Math.max(window.screen.width || 0, window.innerWidth || 0)\n                _this.containerheight = Math.max(window.screen.height || 0, window.innerHeight || 0)\n\n                const roundElement = document.getElementById('round')\n                roundElement.style.width = _this.containerWidth + 'px'\n                roundElement.style.height = _this.containerHeight + 'px'\n                let currentViewBox = _this.container.viewbox()\n                _this.container.size(this.containerWidth, this.containerHeight)\n                _this.container.viewbox(\n                    0,\n                    currentViewBox.y,\n                    _this.containerWidth,\n                    _this.containerHeight\n                )\n                _this.draw()\n            }\n        }, 500);\n    }\n\n    getOrientation () {\n        let orientation;\n        if (window.orientation === 0 || window.orientation === 180) {\n            orientation = 'portrait'\n        } else {\n            orientation = 'landscape'\n        }\n        // console.log('getOrientation', orientation);\n        return orientation\n    }\n\n    onKeypress (e) {\n        if (e.key === KEY_MAPPINGS.playToggle && !this.props.disableKeyListener) {\n            if (this.props.round.isPlaying) {\n                AudioEngine.stop()\n                this.context.updateRound(this.round.id, { isPlaying: false })\n                this.props.dispatch({ type: SET_IS_PLAYING, payload: { value: false } })\n            } else {\n                AudioEngine.play()\n                this.context.updateRound(this.round.id, { isPlaying: true })\n                this.props.dispatch({ type: SET_IS_PLAYING, payload: { value: true } })\n            }\n        }\n    }\n\n    showOrientationDialog () {\n        this.props.dispatch({ type: SET_IS_SHOWING_ORIENTATION_DIALOG, payload: { value: true } })\n    }\n\n    hideOrientationDialog () {\n        this.props.dispatch({ type: SET_IS_SHOWING_ORIENTATION_DIALOG, payload: { value: false } })\n    }\n\n    render () {\n        //console.log('HTML UI render()');\n        return (\n            <div className=\"round\" id=\"round\" ></div>\n        )\n    }\n}\nPlayUI.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n    //console.log('mapStateToProps', state);\n    return {\n        round: state.round,\n        user: state.user,\n        users: state.users,\n        disableKeyListener: state.display.disableKeyListener\n    };\n};\n\n\nexport default connect(\n    mapStateToProps\n)(withStyles(styles)(PlayUI));\n","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/EffectsSidebar.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/PatternsSidebar.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/ShareDialog.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/AudioEngine.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/utils/defaultData.js",["372","373"],"import { Layer } from './constants';\nimport { uuid } from './index';\n//import Track from '../audio-engine/Track'\n\nexport const refrashAllIdsInArray = (array) => {\n    return array.map(item => ({ ...item, id: uuid() }))\n}\n\nexport const getDefaultStepData = () => {\n    return {\n        \"isOn\": false,\n        \"id\": uuid(),\n        \"probability\": 1,\n        \"velocity\": 1,\n        \"note\": \"C4\"\n    }\n};\n\nexport const getDefaultLayerData = (userId, instrument) => {\n    const layer = {\n        \"id\": uuid(),\n        \"createdBy\": userId || null,\n        \"name\": \"\",\n        \"type\": 'TRACK_TYPE_LAYER',\n        \"timeOffset\": 0,\n        \"percentOffset\": 0,\n        \"isActive\": true,\n        \"isMuted\": false,\n        \"isPreviewed\": false,\n        \"gain\": 0,\n        \"instrument\": {\n            \"noteLength\": \"64n\",\n            \"instrument\": \"Sampler\",\n            \"sampler\": \"BassDrum\",\n            \"sample\": \"bdLong04\",\n            ...instrument\n        },\n        \"steps\": Array(Layer.DefaultStepsAmount).fill(null).map(() => { return getDefaultStepData() }),\n        \"createdAt\": Date.now()\n    }\n    // increase each layer createdAt time by 1 ms so they're not equal\n    let i = 0\n    layer.steps.map((step) => {\n        step.order = i++\n    })\n    return layer;\n};\n\nexport const getDefaultRoundData = (userId) => {\n    const round = {\n        \"createdBy\": userId || null,\n        \"id\": uuid(),\n        \"dataVersion\": 1.5,\n        \"bpm\": 120,\n        swing: 0,\n        \"name\": \"Default Round\",\n        \"createdAt\": Date.now(),\n        \"currentUsers\": [],\n        \"layers\": [\n            getDefaultLayerData(userId, {\n                \"instrument\": \"Sampler\",\n                \"sampler\": \"HitHatOpen\",\n                \"sample\": \"oh03\",\n            }),\n            getDefaultLayerData(userId, {\n                \"instrument\": \"Sampler\",\n                \"sampler\": \"SnareDrum\",\n                \"sample\": \"sd03\",\n            }),\n            getDefaultLayerData(userId, {\n                \"instrument\": \"Sampler\",\n                \"sampler\": \"BassDrum\",\n                \"sample\": \"bdLong04\"\n            })\n        ],\n        userBuses: {},\n        userPatterns: {}\n    }\n    round.userBuses[userId] = getDefaultUserBus(userId)\n    round.userPatterns[userId] = getDefaultUserPatterns(userId)\n    // increase each layer createdAt time by 1 ms so they're not equal\n    let i = 0\n    round.layers.map((layer) => {\n        layer.name = \"Layer \" + (i + 1)\n        layer.createdAt += i++\n    })\n    return round\n}\n\nexport const getDefaultUserBus = (id) => {\n    return {\n        id,\n        fx: getDefaultUserBusFx()\n    }\n}\n\nexport const getDefaultUserBusFx = () => {\n    return [\n        {\n            \"id\": uuid(),\n            name: 'autowah',\n            order: 0,\n            isOn: true,\n            isOverride: false\n        },\n        {\n            \"id\": uuid(),\n            name: 'lowpass',\n            order: 1,\n            isOn: true,\n            isOverride: false\n        },\n        {\n            \"id\": uuid(),\n            name: 'highpass',\n            order: 2,\n            isOn: true,\n            isOverride: false\n        },\n        {\n            \"id\": uuid(),\n            name: 'delay',\n            order: 3,\n            isOn: true,\n            isOverride: false\n        },\n        {\n            \"id\": uuid(),\n            name: 'distortion',\n            order: 4,\n            isOn: true,\n            isOverride: false\n        }\n    ]\n}\n\nexport const getDefaultUserPatterns = (id) => {\n    let userPattern = {\n        id,\n        isQueuing: '',\n        patterns: []\n    }\n    for (let i = 0; i < 5; i++) {\n        userPattern.patterns[i] = getDefaultUserPattern(i)\n    }\n    return userPattern\n}\nexport const getDefaultUserPattern = (order) => {\n    return {\n        id: uuid(),\n        order,\n        state: {}\n    }\n}","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/utils/index.js",["374"],"/* eslint-disable eqeqeq */\nimport { getDefaultRoundData, getDefaultStepData } from './defaultData'\nimport { Limits, Colors } from './constants'\nimport _ from 'lodash'\n\nexport const createRound = (userId) => {\n    return getDefaultRoundData(userId)\n}\n\nexport const uuid = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        // eslint-disable-next-line no-mixed-operators\n        const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport const numberRange = (value, inMin, inMax, outMin, outMax) => {\n    return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n}\n\nexport const randomBool = (probability = 0.5) => {\n    return Math.random() < probability\n}\n\nexport const randomItem = (items) => {\n    return items[Math.floor(Math.random() * items.length)]\n}\n\nexport const getRandomColor = () => {\n    return randomItem(Colors)\n    // return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\nexport const changeLayerLength = (layer, newLength) => {\n    const amount = layer.steps.length;\n    let difference = newLength - amount;\n    if (difference < 0) {\n        //remove the difference\n        const newSteps = [...layer.steps];\n        if (newLength < Limits.stepsPerLayer.min) {\n            newSteps.splice(Limits.stepsPerLayer.min, layer.steps.length - 1);\n        } else {\n            newSteps.splice(difference, 9e9);\n        }\n\n        return newSteps\n    }\n    if (difference > 0) {\n        // add new steps\n        let stepsToAdd = [];\n        if (newLength > Limits.stepsPerLayer.max) {\n            stepsToAdd = Array(Limits.stepsPerLayer.max - amount).fill(0).map(element => getDefaultStepData());\n        } else {\n            stepsToAdd = Array(difference).fill(0).map(element => getDefaultStepData());\n        }\n        let steps = [...layer.steps, ...stepsToAdd]\n        let i = 0;\n        steps.map((step) => {\n            step.order = i++;\n        })\n        steps = _.orderBy(steps, 'order')\n        return steps\n    }\n}\n\nexport const convertPercentToDB = (percent) => {\n    let dB;\n    if (percent > 60) {\n        dB = numberRange(percent, 60, 100, -6, 6)\n    } else {\n        dB = numberRange(percent, 0, 60, -48, -6)\n    }\n    if (dB <= -48) {\n        dB = -96\n    }\n    return dB;\n}\n\nexport const convertDBToPercent = (dB) => {\n    if (dB < -48) {\n        dB = -48\n    }\n    let percent;\n    if (dB > -6) {\n        percent = numberRange(dB, -6, 6, 60, 100)\n    } else {\n        percent = numberRange(dB, -48, -6, 0, 60)\n    }\n    return percent;\n}","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerSettings.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/round.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/rounds.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/utils/constants.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/Track.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerAutomation.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerType.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerNumberOfSteps.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerInstrument.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerName.js",[],["375","376"],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/VolumeSlider.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/PatternThumbControl.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/EffectThumbControl.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/FX.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/Instruments.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/Automation.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/reverb.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/autowah.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/bitcrusher.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/distortion.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/highpass.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/lowpass.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/delay.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/TomToms.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Rimshot.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Maracas.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Cymbal.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Cowbell.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Congas.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Claves.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/Clap.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/SnareDrum.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/HitHatOpen.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/HiHatClosed.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/BassDrum.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/instruments/InstrumentBaseClass.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/audio-engine/fx/fx-base-class.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Bass Drum [BD]/index.js",["377"],"export default {\n    bdLong01: 'E808_BD[long]-01.wav',\n    bdLong02: 'E808_BD[long]-02.wav',\n    bdLong03: 'E808_BD[long]-03.wav',\n    bdLong04: 'E808_BD[long]-04.wav',\n    bdLong05: 'E808_BD[long]-05.wav',\n    bdLong06: 'E808_BD[long]-06.wav',\n    bdLong07: 'E808_BD[long]-07.wav',\n    bdLong08: 'E808_BD[long]-08.wav',\n    bdLong09: 'E808_BD[long]-09.wav',\n    bdLong10: 'E808_BD[long]-10.wav',\n    bdLong11: 'E808_BD[long]-11.wav',\n    bdLong12: 'E808_BD[long]-12.wav',\n    bdLong13: 'E808_BD[long]-13.wav',\n    bdLong14: 'E808_BD[long]-14.wav',\n    bdLong15: 'E808_BD[long]-15.wav',\n    bdLong16: 'E808_BD[long]-16.wav',\n    bdLong17: 'E808_BD[long]-17.wav',\n    bdShort01: 'E808_BD[short]-01.wav',\n    bdShort02: 'E808_BD[short]-02.wav',\n    bdShort03: 'E808_BD[short]-03.wav',\n    bdShort04: 'E808_BD[short]-04.wav',\n    bdShort05: 'E808_BD[short]-05.wav',\n    bdShort06: 'E808_BD[short]-06.wav',\n    bdShort07: 'E808_BD[short]-07.wav',\n    bdShort08: 'E808_BD[short]-08.wav',\n    bdShort09: 'E808_BD[short]-09.wav',\n    bdShort10: 'E808_BD[short]-10.wav',\n    bdShort11: 'E808_BD[short]-11.wav',\n    bdShort12: 'E808_BD[short]-12.wav'\n};","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Tom Toms [LT-MT-HT]/index.js",["378"],"export default {\n    ht01: 'E808_HT-01.wav',\n    ht02: 'E808_HT-02.wav',\n    ht03: 'E808_HT-03.wav',\n    ht04: 'E808_HT-04.wav',\n    ht05: 'E808_HT-05.wav',\n    ht06: 'E808_HT-06.wav',\n    ht07: 'E808_HT-07.wav',\n    ht08: 'E808_HT-08.wav',\n    ht09: 'E808_HT-09.wav',\n    ht10: 'E808_HT-10.wav',\n    ht11: 'E808_HT-11.wav',\n    ht12: 'E808_HT-12.wav',\n    lt01: 'E808_LT-01.wav',\n    lt02: 'E808_LT-02.wav',\n    lt03: 'E808_LT-03.wav',\n    lt04: 'E808_LT-04.wav',\n    lt05: 'E808_LT-05.wav',\n    lt06: 'E808_LT-06.wav',\n    lt07: 'E808_LT-07.wav',\n    lt08: 'E808_LT-08.wav',\n    lt09: 'E808_LT-09.wav',\n    lt10: 'E808_LT-10.wav',\n    lt11: 'E808_LT-11.wav',\n    lt12: 'E808_LT-12.wav',\n    mt01: 'E808_MT-01.wav',\n    mt02: 'E808_MT-02.wav',\n    mt03: 'E808_MT-03.wav',\n    mt04: 'E808_MT-04.wav',\n    mt05: 'E808_MT-05.wav',\n    mt06: 'E808_MT-06.wav',\n    mt07: 'E808_MT-07.wav',\n    mt08: 'E808_MT-08.wav',\n    mt09: 'E808_MT-09.wav',\n    mt10: 'E808_MT-10.wav',\n    mt11: 'E808_MT-11.wav',\n    mt12: 'E808_MT-12.wav'\n};","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Cymbal [CY]/index.js",["379"],"export default {\n    cy01: 'E808_CY-01.wav',\n    cy02: 'E808_CY-02.wav',\n    cy03: 'E808_CY-03.wav',\n    cy04: 'E808_CY-04.wav',\n    cy05: 'E808_CY-05.wav',\n    cy06: 'E808_CY-06.wav',\n    cy07: 'E808_CY-07.wav',\n    cy08: 'E808_CY-08.wav',\n    cy09: 'E808_CY-09.wav',\n    cy10: 'E808_CY-10.wav',\n    cy11: 'E808_CY-11.wav',\n    cy12: 'E808_CY-12.wav',\n    cy13: 'E808_CY-13.wav',\n    cy14: 'E808_CY-14.wav',\n    cy15: 'E808_CY-15.wav',\n    cy16: 'E808_CY-16.wav'\n};\n","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Hi Hat Closed [CH]/index.js",["380"],"export default {\n    ch01: 'E808_CH-01.wav',\n    ch02: 'E808_CH-02.wav',\n    ch03: 'E808_CH-03.wav',\n    ch04: 'E808_CH-04.wav',\n    ch05: 'E808_CH-05.wav',\n    ch06: 'E808_CH-06.wav',\n    ch07: 'E808_CH-07.wav',\n    ch08: 'E808_CH-08.wav',\n    ch09: 'E808_CH-09.wav',\n    ch10: 'E808_CH-10.wav',\n    ch11: 'E808_CH-11.wav',\n    ch12: 'E808_CH-12.wav'\n};\n","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Snare Drum [SD]/index.js",["381"],"export default {\n    sd01: 'E808_SD-01.wav',\n    sd02: 'E808_SD-02.wav',\n    sd03: 'E808_SD-03.wav',\n    sd04: 'E808_SD-04.wav',\n    sd05: 'E808_SD-05.wav',\n    sd06: 'E808_SD-06.wav',\n    sd07: 'E808_SD-07.wav',\n    sd08: 'E808_SD-08.wav',\n    sd09: 'E808_SD-09.wav',\n    sd10: 'E808_SD-10.wav',\n    sd11: 'E808_SD-11.wav',\n    sd12: 'E808_SD-12.wav',\n    sd13: 'E808_SD-13.wav',\n    sd14: 'E808_SD-14.wav',\n    sd15: 'E808_SD-15.wav',\n    sd16: 'E808_SD-16.wav',\n    sd17: 'E808_SD-17.wav',\n    sd18: 'E808_SD-18.wav',\n    sd19: 'E808_SD-19.wav',\n    sd20: 'E808_SD-20.wav'\n};\n","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Hi Hat Open [OH]/index.js",["382"],"export default {\n    oh01: 'E808_OH-01.wav',\n    oh02: 'E808_OH-02.wav',\n    oh03: 'E808_OH-03.wav',\n    oh04: 'E808_OH-04.wav',\n    oh05: 'E808_OH-05.wav',\n    oh06: 'E808_OH-06.wav',\n    oh07: 'E808_OH-07.wav',\n    oh08: 'E808_OH-08.wav',\n    oh09: 'E808_OH-09.wav',\n    oh10: 'E808_OH-10.wav',\n    oh11: 'E808_OH-11.wav',\n    oh12: 'E808_OH-12.wav',\n    oh13: 'E808_OH-13.wav'\n};\n","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Claves [CL]/index.js",["383"],"export default {\n    cl01: 'E808_CL-01.wav',\n    cl02: 'E808_CL-02.wav',\n    cl03: 'E808_CL-03.wav',\n    cl04: 'E808_CL-04.wav',\n    cl05: 'E808_CL-05.wav',\n    cl06: 'E808_CL-06.wav',\n    cl07: 'E808_CL-07.wav',\n    cl08: 'E808_CL-08.wav',\n    cl09: 'E808_CL-09.wav',\n    cl10: 'E808_CL-10.wav',\n    cl11: 'E808_CL-11.wav'\n};","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Clap [CP]/index.js",["384"],"export default {\n    cp01: 'E808_CP-01.wav',\n    cp02: 'E808_CP-02.wav',\n    cp03: 'E808_CP-03.wav',\n    cp04: 'E808_CP-04.wav',\n    cp05: 'E808_CP-05.wav',\n    cp06: 'E808_CP-06.wav',\n    cp07: 'E808_CP-07.wav',\n    cp08: 'E808_CP-08.wav',\n    cp09: 'E808_CP-09.wav',\n    cp10: 'E808_CP-10.wav',\n    cp11: 'E808_CP-11.wav',\n    cp12: 'E808_CP-12.wav',\n    cp13: 'E808_CP-13.wav',\n    cp14: 'E808_CP-14.wav',\n    cp15: 'E808_CP-15.wav',\n};","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Congas [HC-MC-LC]/index.js",["385"],"export default {\n    hc01: 'E808_HC-01.wav',\n    hc02: 'E808_HC-02.wav',\n    hc03: 'E808_HC-03.wav',\n    hc04: 'E808_HC-04.wav',\n    hc05: 'E808_HC-05.wav',\n    hc06: 'E808_HC-06.wav',\n    hc07: 'E808_HC-07.wav',\n    hc08: 'E808_HC-08.wav',\n    hc09: 'E808_HC-09.wav',\n    hc10: 'E808_HC-10.wav',\n    lc01: 'E808_LC-01.wav',\n    lc02: 'E808_LC-02.wav',\n    lc03: 'E808_LC-03.wav',\n    lc04: 'E808_LC-04.wav',\n    lc05: 'E808_LC-05.wav',\n    lc06: 'E808_LC-06.wav',\n    lc07: 'E808_LC-07.wav',\n    lc08: 'E808_LC-08.wav',\n    lc09: 'E808_LC-09.wav',\n    lc10: 'E808_LC-10.wav',\n    mc01: 'E808_MC-01.wav',\n    mc02: 'E808_MC-02.wav',\n    mc03: 'E808_MC-03.wav',\n    mc04: 'E808_MC-04.wav',\n    mc05: 'E808_MC-05.wav',\n    mc06: 'E808_MC-06.wav',\n    mc07: 'E808_MC-07.wav',\n    mc08: 'E808_MC-08.wav',\n    mc09: 'E808_MC-09.wav',\n    mc10: 'E808_MC-10.wav'\n};","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Cowbell [CB]/index.js",["386"],"export default {\n    cb01: 'E808_CB-01.wav',\n    cb02: 'E808_CB-02.wav',\n    cb03: 'E808_CB-03.wav',\n    cb04: 'E808_CB-04.wav',\n    cb05: 'E808_CB-05.wav',\n    cb06: 'E808_CB-06.wav',\n    cb07: 'E808_CB-07.wav',\n    cb08: 'E808_CB-08.wav',\n    cb09: 'E808_CB-09.wav',\n    cb10: 'E808_CB-10.wav',\n    cb11: 'E808_CB-11.wav',\n    cb12: 'E808_CB-12.wav',\n    cb13: 'E808_CB-13.wav',\n    cb14: 'E808_CB-14.wav',\n    cb15: 'E808_CB-15.wav'\n};\n","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Maracas [MA]/index.js",["387"],"export default {\n    ma01: 'E808_MA-01.wav',\n    ma02: 'E808_MA-02.wav',\n    ma03: 'E808_MA-03.wav',\n    ma04: 'E808_MA-04.wav',\n    ma05: 'E808_MA-05.wav',\n    ma06: 'E808_MA-06.wav',\n    ma07: 'E808_MA-07.wav',\n    ma08: 'E808_MA-08.wav',\n    ma09: 'E808_MA-09.wav',\n    ma10: 'E808_MA-10.wav',\n    ma11: 'E808_MA-11.wav'\n};\n","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/samples/Rimshot [RS]/index.js",["388"],"export default {\n    rs01: 'E808_RS-01.wav',\n    rs02: 'E808_RS-02.wav',\n    rs03: 'E808_RS-03.wav',\n    rs04: 'E808_RS-04.wav',\n    rs05: 'E808_RS-05.wav',\n    rs06: 'E808_RS-06.wav',\n    rs07: 'E808_RS-07.wav',\n    rs08: 'E808_RS-08.wav',\n    rs09: 'E808_RS-09.wav',\n    rs10: 'E808_RS-10.wav',\n    rs11: 'E808_RS-11.wav'\n};\n","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/SwingSlider.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/header/TempoSlider.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/display.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/users.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/redux/reducers/user.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/dialogs/OrientationDialog.js",["389","390","391"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from \"react-redux\";\nimport { setIsShowingOrientationDialog } from '../../redux/actions'\n\nfunction OrientationDialog ({ isShowingOrientationDialog }) {\n    const handleClose = () => {\n        setIsShowingOrientationDialog(false)\n    }\n\n    return (\n        <Dialog open={isShowingOrientationDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Please rotate your device to landscape mode</DialogTitle>\n        </Dialog>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isShowingOrientationDialog: state.display.isShowingOrientationDialog\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        setIsShowingOrientationDialog\n    }\n)(OrientationDialog);","/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerTimeOffset.js",[],"/Users/simonadcock/Desktop/contract-work/roundaround/roundaround/src/components/play/layer-settings/LayerPercentOffset.js",[],{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","severity":1,"message":"397","line":1,"column":28,"nodeType":"398","messageId":"399","endLine":1,"endColumn":37},{"ruleId":"400","severity":1,"message":"401","line":102,"column":8,"nodeType":"402","endLine":102,"endColumn":10,"suggestions":"403"},{"ruleId":"396","severity":1,"message":"404","line":8,"column":8,"nodeType":"398","messageId":"399","endLine":8,"endColumn":19},{"ruleId":"396","severity":1,"message":"405","line":9,"column":8,"nodeType":"398","messageId":"399","endLine":9,"endColumn":10},{"ruleId":"406","severity":1,"message":"407","line":43,"column":28,"nodeType":"408","messageId":"409","endLine":43,"endColumn":30},{"ruleId":"406","severity":1,"message":"407","line":83,"column":30,"nodeType":"408","messageId":"409","endLine":83,"endColumn":32},{"ruleId":"406","severity":1,"message":"407","line":58,"column":26,"nodeType":"408","messageId":"409","endLine":58,"endColumn":28},{"ruleId":"392","replacedBy":"410"},{"ruleId":"394","replacedBy":"411"},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":31,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":38,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":18,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":14,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":22,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":15,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":13,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":17,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":32,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":17,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":13,"endColumn":3},{"ruleId":"412","severity":1,"message":"413","line":1,"column":1,"nodeType":"414","endLine":13,"endColumn":3},{"ruleId":"396","severity":1,"message":"415","line":2,"column":8,"nodeType":"398","messageId":"399","endLine":2,"endColumn":14},{"ruleId":"396","severity":1,"message":"416","line":4,"column":8,"nodeType":"398","messageId":"399","endLine":4,"endColumn":21},{"ruleId":"396","severity":1,"message":"417","line":5,"column":8,"nodeType":"398","messageId":"399","endLine":5,"endColumn":21},"no-native-reassign",["418"],"no-negated-in-lhs",["419"],"no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firebaseContext', 'location', 'redirectAfterSignIn', 'setIsShowingSignInDialog', 'setRedirectAfterSignIn', 'setRounds', and 'setUser'. Either include them or remove the dependency array. If 'setUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["420"],"'Instruments' is defined but never used.","'FX' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["418"],["419"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"421","fix":"422"},"Update the dependencies array to be: [firebaseContext, location, redirectAfterSignIn, setIsShowingSignInDialog, setRedirectAfterSignIn, setRounds, setUser]",{"range":"423","text":"424"},[3564,3566],"[firebaseContext, location, redirectAfterSignIn, setIsShowingSignInDialog, setRedirectAfterSignIn, setRounds, setUser]"]